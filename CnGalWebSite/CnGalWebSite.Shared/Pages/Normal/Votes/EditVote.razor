@page "/votes/editvote/{Id}"
@attribute [Authorize(Roles = "Admin")]

@inject IHttpService _httpService

@inject ILocalStorageService _localStorage


@inject IServiceProvider Provider
@inject NavigationManager NavigationManager
@inject IDataCacheService _dataCacheService

@if (string.IsNullOrWhiteSpace(Model.Name) == false)
{
    <CnGalWebSite.Shared.MasaComponent.Shared.Cards.TitleTip Title="@("编辑 " + Model.Name)"/>
}
else
{
    <CnGalWebSite.Shared.MasaComponent.Shared.Cards.TitleTip />
}

<MakeSureInWASMTip></MakeSureInWASMTip>

<div class="">
    <div>
        @if (isReady == false)
        {
            <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-4 pb-4">
                <h3 class="text-truncate mb-4 fw-bold">编辑附加信息</h3>
                <h5 class=" mb-4 fw-bold">当前投票：（Id:）</h5>
                <hr>

                <div>
                    <SkeletonParagraph />
                    <div class="mt-2">
                    </div>
                    <SkeletonParagraph />
                    <div class="mt-2">
                    </div>
                    <SkeletonParagraph />
                    <div class="mt-2">
                    </div>
                    <SkeletonParagraph />
                    <div class="mt-2">
                    </div>
                    <SkeletonParagraph />
                </div>
            </div>
        }
        else
        {
            <ValidateForm Model="@Model" ValidateAllProperties="true" @ref="ComplexForm">
                <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-4 mb-4">
                    <h3 class="text-truncate mb-4 fw-bold">填写主要信息</h3>
                    <hr />

                    <div class="row">
                        <div class=" col-12 col-md-6 col-lg-3 col-xl-3 mt-2">
                            <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Buttons.ImageUploadButton ShowCropper @bind-ImagePath="@Model.MainPicture" Type="ImageAspectType._16_9" Text="上传主图" />
                        </div>
                        <div class=" col-12 col-md-6 col-lg-3 col-xl-3 mt-2">
                            <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Buttons.ImageUploadButton ShowCropper @bind-ImagePath="@Model.Thumbnail" Type="ImageAspectType._1_1" Text="上传缩略图" />
                        </div>
                        <div class=" col-12 col-md-6 col-lg-3 col-xl-3 mt-2">
                            <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Buttons.ImageUploadButton @bind-ImagePath="@Model.BackgroundPicture" Type="ImageAspectType.None" Text="上传大背景图" />
                        </div>
                        <div class=" col-12 col-md-6 col-lg-3 col-xl-3 mt-2">
                            <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Buttons.ImageUploadButton @bind-ImagePath="@Model.SmallBackgroundPicture" Type="ImageAspectType.None" Text="上传小背景图" />
                        </div>
                    </div>

                    <div class="form-group mt-4">
                        <div class="row">

                            <div class="form-group col-12  col-sm-6">
                                <Select @bind-Value="Model.Type" />
                            </div>
                            <div class="form-group col-12  col-sm-6">
                                <BootstrapInput @bind-Value="Model.Name" />
                            </div>
                            <div class="form-group col-12  col-sm-6">
                                <BootstrapInput @bind-Value="Model.DisplayName" />
                            </div>
                            <div class="form-group col-12">
                                <Textarea @bind-Value="Model.BriefIntroduction" rows="3" />
                            </div>
                            <div class="form-group col-12 col-sm-6">
                                <DateTimePicker @bind-Value="@Model.BeginTime" ViewMode="DatePickerViewMode .DateTime" />
                            </div>
                            <div class="form-group col-12 col-sm-6">
                                <DateTimePicker @bind-Value="@Model.EndTime" ViewMode="DatePickerViewMode .DateTime" />
                            </div>


                            @if (Model.Type == VoteType.MultipleChoice)
                            {
                                <div class="form-group col-12  col-sm-6">
                                    <BootstrapInputNumber ShowButton="true" @bind-Value="@Model.MinimumSelectionCount" Max="@Model.MaximumSelectionCount.ToString()" Min="1" />
                                </div>
                                <div class="form-group col-12  col-sm-6">
                                    <BootstrapInputNumber ShowButton="true" @bind-Value="@Model.MaximumSelectionCount" Max="99" Min="@Model.MinimumSelectionCount.ToString()" />
                                </div>
                            }

                            <div class="form-group col-12  col-sm-6">
                                <Switch @bind-Value="Model.IsAllowModification" />
                            </div>
                        </div>
                    </div>


                </div>
            </ValidateForm>
            <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-4 pb-4 mb-4">
                <h3 class="text-truncate mb-4 fw-bold">编辑正文</h3>
                <hr class="mb-4" />

                @if (isReady == true)
                {
                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.Markdown.MarkdownEditorTip @bind-Context="@Model.MainPage"/>
                }


            </div>

            <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-4 pb-4 mb-4">
                <h3 class="text-truncate mb-4 fw-bold">填写选项</h3>
                <hr />
                <h5 class="fw-bold mb-4">选项列表</h5>
                <CnGalWebSite.Shared.Component.Votes.Options.OptionEditorChartTip Options="Model.Options" @ref="optionEditor" />

            </div>

            <div class="alert alert-success  rounded shadow-sm  rounded" role="alert">
                请尽量填写此部分，我们会根据名称自动关联词条，请确保词条存在
            </div>
            <div class="alert alert-warning  rounded shadow-sm  rounded" role="alert">
                未填写的词条将会自动忽略，不需要手动删除
            </div>
            <div class=" rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-4 pb-4 mb-4">
                <h3 class="text-truncate mb-4 fw-bold">
                    添加关联信息
                </h3>
                <hr />
                <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Cards.Relevances.InputRelevancesListTip AutoCompleteItems="@PeripheryItems" Model="Model.Peripheries" Title="周边"></CnGalWebSite.Shared.MasaComponent.Shared.Editors.Cards.Relevances.InputRelevancesListTip>
                <hr class="mt-4" />
                <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Cards.Relevances.InputRelevancesListTip AutoCompleteItems="@ArticleItems" Model="Model.Articles" Title="文章"></CnGalWebSite.Shared.MasaComponent.Shared.Editors.Cards.Relevances.InputRelevancesListTip>
                <hr class="mt-4" />
                <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Cards.Relevances.InputRelevancesListTip AutoCompleteItems="@EntryRoleItems" Model="Model.Roles" Title="角色"></CnGalWebSite.Shared.MasaComponent.Shared.Editors.Cards.Relevances.InputRelevancesListTip>
                <hr class="mt-4" />
                <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Cards.Relevances.InputRelevancesListTip AutoCompleteItems="@EntryStaffItems" Model="Model.Staffs" Title="STAFF"></CnGalWebSite.Shared.MasaComponent.Shared.Editors.Cards.Relevances.InputRelevancesListTip>
                <hr class="mt-4" />
                <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Cards.Relevances.InputRelevancesListTip AutoCompleteItems="@EntryGameItems" Model="Model.Games" Title="游戏"></CnGalWebSite.Shared.MasaComponent.Shared.Editors.Cards.Relevances.InputRelevancesListTip>
                <hr class="mt-4" />
                <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Cards.Relevances.InputRelevancesListTip AutoCompleteItems="@EntryGroupItems" Model="Model.Groups" Title="制作组"></CnGalWebSite.Shared.MasaComponent.Shared.Editors.Cards.Relevances.InputRelevancesListTip>
            </div>
            <div class="alert alert-warning  rounded shadow-sm  rounded" role="alert">
                当你点击“完成”按钮时，将会立即发起审核请求，请在点击前确保内容正确无误
            </div>

            <ValidateForm Model="@Model" ValidateAllProperties="true">

                <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-3 pb-3 mb-4">
                    <div>
                        <BootstrapBlazor.Components.Textarea @bind-Value="Model.Note" DisplayText="备注" />
                        <Button class="mt-3" style="width: 100px" @onclick="@(() => OnSubmit())" IsAsync="true" Color="Color.Success" IsOutline="true" Icon="fa fa-check" Text="完成"></Button>
                    </div>
                </div>

            </ValidateForm>
        }

    </div>
</div>


@code {
    [Parameter]
    public string Id { get; set; }

    private EditVoteModel Model { get; set; } = new EditVoteModel();

    private bool isReady = false;
    private List<string> EntryGameItems { get; set; } = new List<string>();
    private List<string> EntryRoleItems { get; set; } = new List<string>();
    private List<string> EntryGroupItems { get; set; } = new List<string>();
    private List<string> EntryStaffItems { get; set; } = new List<string>();
    private List<string> PeripheryItems { get; set; } = new List<string>();
    private List<string> ArticleItems { get; set; } = new List<string>();

    private bool IsOnlyNeedPublishTime { get; set; } = true;
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                //清空当前缓存
                _dataCacheService.VoteIndexPageCatche.Clean(Id);
                //获取文章信息
                Model = await _httpService.GetAsync<EditVoteModel>("api/votes/EditVote/" + Id);
                //获取所有词条
                EntryGameItems = await _httpService.GetAsync<List<string>>("api/entries/GetAllEntries/0");
                EntryRoleItems = await _httpService.GetAsync<List<string>>("api/entries/GetAllEntries/1");
                EntryGroupItems = await _httpService.GetAsync<List<string>>("api/entries/GetAllEntries/2");
                EntryStaffItems = await _httpService.GetAsync<List<string>>("api/entries/GetAllEntries/3");
                //获取所有文章
                ArticleItems = await _httpService.GetAsync<List<string>>("api/articles/GetAllArticles");

                PeripheryItems = await _httpService.GetAsync<List<string>>("api/peripheries/GetAllPeripheries");

                isReady = true;
                StateHasChanged();
            }
            catch (Exception ex)
            {
                ErrorHandler.ProcessError(ex, "获取所有词条名称列表失败");
            }
        }
    }
    private async Task OnSubmit()
    {
        try
        {
            //处理数据
            if (string.IsNullOrWhiteSpace(Model.Name) || string.IsNullOrWhiteSpace(Model.DisplayName))
            {
                await ToastService.Error("编辑投票失败", "请填写所有必填项目");
                return;
            }
            if (Model.BeginTime > Model.EndTime)
            {
                await ToastService.Error("编辑投票失败", "开始时间必须早于结束时间");
                return;

            }
            //复制选项
            if (optionEditor != null)
            {
                Model.Options = optionEditor.Options;
            }


            if (Model.Type == VoteType.MultipleChoice)
            {
                if (Model.MinimumSelectionCount < 1)
                {
                    await ToastService.Error("编辑投票失败", "只能最少同时选中项目数必须大于0");
                    return;
                }
                if (Model.MaximumSelectionCount > Model.Options.Count)
                {
                    await ToastService.Error("编辑投票失败", "只能最多同时选中项目数必须小于等于选项数");
                    return;
                }
                if (Model.MinimumSelectionCount > Model.MaximumSelectionCount)
                {
                    await ToastService.Error("编辑投票失败", "只能最少同时选中项目数必须小于等于最多同时选中项目数");
                    return;
                }
            }


            var obj = await _httpService.PostAsync<EditVoteModel, Result>("api/votes/EditVote", Model);
            //判断结果
            if (obj.Successful == false)
            {

                await ToastService.Error("编辑投票失败", obj.Error);
            }
            else
            {
                await ToastService.Success("编辑投票成功", "编辑投票成功");
                NavigationManager.NavigateTo(Provider, "/votes/index/" + Model.Id, Model.DisplayName, "fa fa-dropbox");
            }
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "编辑投票失败");
        }
    }
}
