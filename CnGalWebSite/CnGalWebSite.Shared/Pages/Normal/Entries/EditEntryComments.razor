@page "/entries/editentrycomments/{Id}"
@attribute [Authorize(Roles = "Admin")]


@inject IHttpService _httpService
@inject ToastService? ToastService

@if(string.IsNullOrWhiteSpace(Model.Name)==false)
{
    <TitleTip Title="@("编辑 " + Model.Name)"></TitleTip>
}

<MakeSureInWASMTip></MakeSureInWASMTip>

<div class="">
    <div class="alert alert-warning  rounded shadow-sm " role="alert">
        不建议直接修改评论，请在审核时驳回不符合规范的评论
    </div>
    @if (isReady == false)
    {
        <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-4 pb-4">
            <h3 class="text-truncate mb-4 fw-bold">编辑词条评论</h3>
            <h5 class="mb-4 fw-bold">当前词条：（Id:）</h5>
            <hr>

            <div>
                <SkeletonParagraph />
                <div class="mt-2">
                </div>
                <SkeletonParagraph />
                <div class="mt-2">
                </div>
                <SkeletonParagraph />
                <div class="mt-2">
                </div>
                <SkeletonParagraph />
            </div>
        </div>
    }
    else
    {
        <EditSpaceCommentsTip Id="@Model.Id.ToString()" Title="编辑词条评论" Type="CommentType.CommentEntries" Subtitle="@("当前词条："+Model.Name+"（Id:"+Model.Id+"）")"></EditSpaceCommentsTip>
    }

</div>


@code {
    [Parameter]
    public string Id { get; set; }
    public EditMainPageViewModel Model { get; set; } = new EditMainPageViewModel();
    bool isReady = false;


    protected override async Task OnInitializedAsync()
    {
        try
        {
            //获取词条信息
            Model = await _httpService.GetAsync<EditMainPageViewModel>("api/entries/editmainpage/" + Id);
            isReady = true;
            StateHasChanged();
        }
        catch
        {
            await ToastService.Error("无法连接到服务器", "请确保网络正常后联系开发人员");
        }
    }

}
