@page "/space/editdata"
@attribute [Authorize]
@inject NavigationManager NavigationManager


@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var user = await authenticationStateTask;
            if (user.User.Identity.IsAuthenticated == false)
            {
                OnLogin();
                return;
            }
            var UserId  = user.User.Claims.GetUserId();

            NavigationManager.NavigateTo("/space/editdata/" + UserId);
        }
    }
    protected void OnLogin()
    {
        InteractiveRequestOptions requestOptions = new()
        {
            Interaction = InteractionType.SignIn,
            ReturnUrl = NavigationManager.Uri,
        };


        if (ToolHelper.IsSSR)
        {
            NavigationManager.NavigateTo($"Account/Login?returnUrl={NavigationManager.Uri}", true);
        }
        else
        {
            NavigationManager.NavigateToLogin("authentication/login", requestOptions);
        }
    }
}
