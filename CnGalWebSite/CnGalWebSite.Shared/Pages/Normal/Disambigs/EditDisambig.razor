@page "/disambigs/editdisambig/{id}"
@attribute [Authorize]

@inject IHttpService _httpService

@inject ILocalStorageService _localStorage
@inject ToastService? ToastService
@inject IServiceProvider Provider
@inject NavigationManager NavigationManager



@if(string.IsNullOrWhiteSpace(Model.Name)==false)
{
    <TitleTip Title="@("编辑 " + Model.Name)"></TitleTip>
}

<MakeSureInWASMTip></MakeSureInWASMTip>

<div class="">
    <div class="" style="padding-right: 0;padding-left: 0;">
        <AlertTip Type="AlertTip.AlertTipType.Reward"></AlertTip>
        @if (isReady == false)
        {
            <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-4 pb-4 mb-4">
                <h3 class="text-truncate mb-4 fw-bold">编辑消歧义页面</h3>
                <h5 class="mb-4 fw-bold">当前消歧义页面：（Id:）</h5>
                <hr>

                <div>
                    <SkeletonParagraph />
                    <div class="mt-2">
                    </div>
                    <SkeletonParagraph />
                    <div class="mt-2">
                    </div>
                    <SkeletonParagraph />
                    <div class="mt-2">
                    </div>
                    <SkeletonParagraph />
                    <div class="mt-2">
                    </div>
                    <SkeletonParagraph />
                </div>
            </div>
            <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-4 pb-4 mb-4">
                <h3 class="text-truncate mb-4 fw-bold">编辑消歧义页面关联词条</h3>
                <hr>

                <div>
                    <SkeletonParagraph />
                    <div class="mt-2">
                    </div>
                    <SkeletonParagraph />
                    <div class="mt-2">
                    </div>
                    <SkeletonParagraph />
                    <div class="mt-2">
                    </div>
                    <SkeletonParagraph />
                    <div class="mt-2">
                    </div>
                    <SkeletonParagraph />
                </div>
            </div>

        }
        else
        {
            <ValidateForm Model="@Model" ValidateAllProperties="true" @ref="ComplexForm">
                <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-4 pb-4 mb-4">
                    <h3 class="text-truncate mb-4 fw-bold">编辑主要信息</h3>
                    <hr />

                    <div class="row">
                        <div class="col-12 col-md-6 col-lg-4 col-xl-4 mt-2">
                            <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Buttons.ImageUploadButton ShowCropper @bind-ImagePath="@Model.MainPicture" Type="ImageAspectType._16_9" Text="上传主图" />
                        </div>
                        <div class="col-12 col-md-6 col-lg-4 col-xl-4 mt-2">
                            <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Buttons.ImageUploadButton @bind-ImagePath="@Model.BackgroundPicture" Type="ImageAspectType.None" Text="上传大背景图" />
                        </div>
                        <div class="col-12 col-md-6 col-lg-4 col-xl-4 mt-2">
                            <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Buttons.ImageUploadButton @bind-ImagePath="@Model.SmallBackgroundPicture" Type="ImageAspectType.None" Text="上传小背景图" />
                        </div>
                    </div>

                    <div class="form-group mt-4">
                        <div class="row">
                            <div class="form-group col-12  col-sm-6">
                                <BootstrapInput @bind-Value="Model.Name" />
                            </div>
                            <div class="form-group col-12">
                                <BootstrapInput @bind-Value="Model.BriefIntroduction" />
                            </div>
                            <div class="form-group col-12">
                                <hr />
                            </div>
                        </div>
                    </div>


                </div>

                <div class="alert alert-warning  rounded shadow-sm  rounded" role="alert">
                    我们会根据名称自动关联词条、文章。未填写的词条将会自动忽略，不需要手动删除
                </div>
                <div class=" rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-4 pb-4 mb-4">
                    <h3 class="text-truncate mb-4 fw-bold">
                        添加关联词条、文章
                    </h3>
                    <hr />
                    <h5 class="fw-bold">词条</h5>

                    <div class="row">
                        @for (int i = 0; i < Model.Entries.Count; i++)
                        {
                            int temp = i;
                            <div class="col-12 col-md-6 col-lg-6 mt-2">
                                <div class="card   bg-opacity ps-4 pe-4 pt-3 pb-3">
                                    <BootstrapInput @bind-Value="Model.Entries[temp].Name" />
                                </div>
                            </div>
                        }
                    </div>
                    <button class="btn btn-outline-primary mt-4" @onclick="@(()=> { Model.Entries.Add(new DisambigRelevanceModel());StateHasChanged(); })"
                            style="width: 100px">
                        添加
                    </button>

                    <hr class="mt-4" />
                    <h5 class="fw-bold">文章</h5>
                    <div class="row">
                        @for (int i = 0; i < Model.Articles.Count; i++)
                        {
                            int temp = i;
                            <div class="col-12 col-md-6 col-lg-6 mt-2">
                                <div class="card  bg-opacity ps-4 pe-4 pt-3 pb-3">
                                    <BootstrapInput @bind-Value="Model.Articles[temp].Name" />
                                </div>
                            </div>
                        }
                    </div>
                    <button type="submit"
                            class="btn btn-outline-primary mt-4" @onclick="@(()=> { Model.Articles.Add(new DisambigRelevanceModel());StateHasChanged();})"
                            style="width: 100px">
                        添加
                    </button>
                </div>
                <div class="alert alert-warning  rounded shadow-sm  rounded" role="alert">
                    当你点击“完成”按钮时，将会立即发起审核请求，请在点击前确保内容正确无误
                </div>
                <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-3 pb-3 mb-3">
                    <div>
                        <BootstrapBlazor.Components.Textarea @bind-Value="Model.Note" DisplayText="备注" />
                        <Button class="mt-3" style="width: 100px" @onclick="@(() => OnSubmit())" IsAsync="true" Color="Color.Success" IsOutline="true" Icon="fa fa-check" Text="完成"></Button>
                    </div>
                </div>
            </ValidateForm>

        }
    </div>
</div>


@code {

    [Parameter]
    public string Id { get; set; }
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    private CnGalWebSite.DataModel.ViewModel.Disambig.EditDisambigViewModel Model { get; set; } = new CnGalWebSite.DataModel.ViewModel.Disambig.EditDisambigViewModel
    {
        Entries = new List<DisambigRelevanceModel>(),
        Articles = new List<DisambigRelevanceModel>()
    };

    [NotNull]
    private ValidateForm? ComplexForm { get; set; }

    private bool isReady = false;

    [NotNull]
    private MarkdownEditorTip? markdownEditorTip;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            //获取文章信息
            Model = await _httpService.GetAsync<EditDisambigViewModel>("api/disambigs/editdisambig/" + Id);
            isReady = true;
        }
        catch(Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取编辑消歧义页失败");
        }
    }

    private async Task OnSubmit()
    {
        try
        {
            //处理数据
            if (string.IsNullOrWhiteSpace(Model.Name) || string.IsNullOrWhiteSpace(Model.BriefIntroduction))
            {
                await ToastService.Error("创建消歧义页失败", "请填写所有必填项目");
                return;
            }

            var obj = await _httpService.PostAsync<CnGalWebSite.DataModel.ViewModel.Disambig.EditDisambigViewModel, Result>("api/disambigs/editdisambig", Model);
            //判断结果
            if (obj.Successful == false)
            {
                if (obj.Error == "该消歧义页的名称与其他消歧义页重复")
                {
                    ComplexForm.SetError<EditDisambigViewModel>(f => f.Name, "已经存在该名称的消歧义页");
                }
                await ToastService.Error("编辑消歧义页失败", obj.Error);
            }
            else
            {
                await ToastService.Success("编辑消歧义页成功", "编辑消歧义页成功，等待审核通过");
                NavigationManager.NavigateTo(Provider,"/disambigs/index/" + obj.Error, Model.Name, "fa fa-key");
            }
        }
        catch(Exception ex)
        {
            ErrorHandler.ProcessError(ex, "编辑消歧义页失败");
        }
    }


}
