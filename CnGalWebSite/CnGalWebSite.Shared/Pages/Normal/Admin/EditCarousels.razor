@page "/admin/editcarousels"
@attribute [Authorize(Roles = "Admin")]

@inject IHttpService _httpService
@inject ToastService? ToastService
@inject IServiceProvider Provider
@inject NavigationManager NavigationManager

<CnGalWebSite.Shared.MasaComponent.Shared.Cards.TitleTip Title="编辑轮播图"/>


<div>
    @if (isReady == false)
    {

        <div class=" rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-4 pb-4">
            <SkeletonParagraph />
            <div class="mt-2">
            </div>
            <SkeletonParagraph />
            <div class="mt-2">
            </div>
            <SkeletonParagraph />
            <div class="mt-2">
            </div>
            <SkeletonParagraph />
            <div class="mt-2">
            </div>
            <SkeletonParagraph />
        </div>
    }
    else
    {
        <div class=" rounded shadow-sm  bg-opacity p-4">
            <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Cards.ImageListEditorCard Model="Model.Carousels" TValue="CarouselModel"/>
            <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaButton Text="完成" IsAsync="true" OnClick="OnSubmit" Icon="mdi-check" Color="success" Class="mt-4" />
        </div>

    }
</div>

@code {

    bool isReady = false;

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    public EditCarouselsViewModel Model { get; set; } = new EditCarouselsViewModel
    {
        Carousels = new List<CarouselModel>()
    };


    protected override async Task OnInitializedAsync()
    {
        try
        {
            Model = await _httpService.GetAsync<EditCarouselsViewModel>("api/admin/editcarousels");

            StateHasChanged();
            isReady = true;
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取轮播图信息失败");
        }

    }

    private async Task OnSubmit()
    {
        try
        {
            //检查
            for (int i = 0; i < Model.Carousels.Count; i++)
            {
                if (string.IsNullOrWhiteSpace(Model.Carousels[i].Image))
                {
                    await ToastService.Error("编辑轮播图失败", "请输入图片链接");
                    return;
                }

            }
            var obj = await _httpService.PostAsync<EditCarouselsViewModel, Result>("api/admin/editcarousels", Model);
            //判断结果
            if (obj.Successful == false)
            {
                await ToastService.Error("编辑轮播图失败", obj.Error);
            }
            else
            {
                await ToastService.Success("编辑轮播图成功", "编辑轮播图成功");
                NavigationManager.NavigateTo(Provider, "/admin/managehome", "管理主页布局", "fa fa-keyboard-o");
            }
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "编辑轮播图失败");
        }
    }
}

