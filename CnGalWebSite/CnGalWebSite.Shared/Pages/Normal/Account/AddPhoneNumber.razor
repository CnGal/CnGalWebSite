@page "/account/addphonenumber/{*returnURL}"

@inject IHttpService _httpService

@inject ILocalStorageService _localStorage
@inject ToastService? ToastService
@inject IServiceProvider Provider
@inject NavigationManager NavigationManager

@inject IDataCacheService _dataCacheService

<TitleTip NoIndex Title="绑定手机"></TitleTip>
<CnGalWebSite.Shared.MasaComponent.Shared.Tips.LoginPagesRoot>
    <div class=" p-3">
        @if (isReady == false)
        {
            <h1 class=" login-h1-text mb-4 text-center">请输入要绑定的手机号码</h1>
            <div class="form-group col-12  mb-0">

                <div class="row">
                    <div class="form-group col-12  col-sm-12">
                        <BootstrapInput @bind-Value="Model.Phone" DisplayText="手机号码" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12">
                        <Button Color="Color.Dark" IsAsync="true" style="width:100%" OnClick="GetPhone">确定</Button>
                    </div>

                </div>
            </div>
        }
        else
        {
            <h1 class=" login-h1-text mb-3 text-center">验证手机号码</h1>
            <span class="mb-4">我们已经向<strong>@(Model.Phone)</strong>发送了一封验证短信，请在下方填写其中的验证码。</span>
            <div class="form-group col-12 mt-4  mb-0">

                <div class="row">
                    <div class="form-group col-12">
                        <div id="captcha-box"></div>
                    </div>
                    <div class="form-group col">
                        <BootstrapInput @bind-Value="AfterModel.NumToken" ShowLabel="true" />
                    </div>

                    <div class="form-group col-auto" style=" display: flex; align-items: flex-end;">
                        <PostVerificationCodeTip Email="@Model.Phone" LoginKey="@_dataCacheService.LoginKey" SmsType="DataModel.Models.SMSType.Register"></PostVerificationCodeTip>
                    </div>
                    <div class="form-group col-12">
                        <Button Color="Color.Dark" IsAsync="true" style="width:100%" OnClick="ConfirmNumToken">验证</Button>
                    </div>

                </div>
            </div>
        }

    </div>
</CnGalWebSite.Shared.MasaComponent.Shared.Tips.LoginPagesRoot>

   

    @code {
        [Parameter]
        public string returnURL { get; set; }

        private AddPhoneNumberModel Model = new AddPhoneNumberModel();

        private ConfirmAddPhoneNumberModel AfterModel = new ConfirmAddPhoneNumberModel();
        bool IsConfirmed = false;
        bool isReady = false;

        [CascadingParameter]
        public ErrorHandler ErrorHandler { get; set; }


        private async Task GetPhone()
        {
            if (string.IsNullOrWhiteSpace(Model.Phone))
            {
                await ToastService.Error("请输入手机号码", "请输入手机号码");
                return;
            }
            try
            {
                Model.LoginToken = _dataCacheService.LoginKey;

                var obj = await _httpService.PostAsync<AddPhoneNumberModel, Result>("api/account/AddPhoneNumber", Model);
                //判断结果
                if (obj.Successful == false)
                {
                    await ToastService.Error("获取验证码失败", obj.Error);
                    return;
                }
                else
                {
                    isReady = true;
                    StateHasChanged();
                }
            }
            catch (Exception ex)
            {
                ErrorHandler.ProcessError(ex, "获取手机验证码失败", "手机号无效");
            }

        }


        private async Task ConfirmNumToken()
        {
            try
            {
                AfterModel.LoginToken = Model.LoginToken;
                AfterModel.Phone = Model.Phone;

                var obj = await _httpService.PostAsync<ConfirmAddPhoneNumberModel, Result>("api/account/ConfirmAddPhoneNumber", AfterModel);
                //判断结果
                if (obj.Successful == false)
                {
                    await ToastService.Error("绑定手机号码失败", obj.Error);
                    return;
                }
                else
                {
                    await ToastService.Success("绑定手机号码成功", "绑定手机号码成功，正在跳转");

                    NavigationManager.NavigateTo(string.IsNullOrWhiteSpace(returnURL) ? "/" : ToolHelper.Base64DecodeUrl(returnURL));
                }
            }
            catch (Exception ex)
            {
                ErrorHandler.ProcessError(ex, "绑定手机号码失败");
            }
        }
    }
