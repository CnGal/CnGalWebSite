@page "/account/historyuserlogin/{*ReturnUrl}"

@inject IHttpService _httpService
@inject SwalService SwalService
@inject ILocalStorageService _localStorage
@inject ToastService? ToastService

@inject IServiceProvider Provider
@inject NavigationManager NavigationManager
@inject IDataCacheService _dataCacheService


<TitleTip NoIndex Title="历史用户登入"></TitleTip>
<CnGalWebSite.Shared.MasaComponent.Shared.Tips.LoginPagesRoot>
    <div class="p-3">

        @if (IsConfirmed == false)
        {
            <h1 class=" login-h1-text mb-3 text-center">验证身份</h1>
            <span class="mb-4">十分抱歉呐，网站翻新后我们需要重新验证你的身份哦，不过没关系，我们已经向你的邮箱发送了一封验证邮件，请在下方填写其中的验证码。如果没有在收件箱找到邮件，还请检查一下垃圾箱</span>
            <div class="form-group col-12 mt-4  mb-0">

                <div class="row">
                    <div class="form-group col">
                        <BootstrapInput @bind-Value="Model.NumToken" ShowLabel="true" />
                    </div>
                    <div class="form-group col-auto" style=" display: flex; align-items: flex-end;">
                        <PostVerificationCodeTip UserName="@_dataCacheService.UserName" IsFrist="false"></PostVerificationCodeTip>
                    </div>
                    <div class="form-group col-12">
                        <Button Color="Color.Dark" IsAsync="true" style="width:100%" OnClick="ConfirmNumToken">验证</Button>
                    </div>

                </div>
            </div>
        }
        else
        {
            <h1 class=" login-h1-text mb-3 text-center">设置密码</h1>
            <span class="mb-4">身份验证通过了，恭喜恭喜，为了确保阁下的安全，还请重新设置密码</span>
            <div class="form-group col-12  mb-0">

                <div class="row">
                    <div class="form-group col-12  col-sm-12">
                        <BootstrapInput @bind-Value="Model.Password" type="password" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12  col-sm-12">
                        <BootstrapInput @bind-Value="Model.ConfirmPassword" type="password" ShowLabel="true" />
                    </div>
                    <div class="form-group col-12">
                        <Button Color="Color.Dark" IsAsync="true" style="width:100%" OnClick="ConfirmPassword">确定</Button>
                    </div>

                </div>
            </div>
        }

    </div>

</CnGalWebSite.Shared.MasaComponent.Shared.Tips.LoginPagesRoot>



@code {
    [Parameter]
    public string ReturnUrl { get; set; }
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }

    private HistorUserChangePasswordModel Model = new HistorUserChangePasswordModel();
    bool IsConfirmed = false;
    bool isReady = false;


    private async Task ConfirmNumToken()
    {
        try
        {
            var obj = await _httpService.PostAsync<CheckVerificationCodeModel, Result>("api/account/CheckVerificationCode", new CheckVerificationCodeModel { Num = Model.NumToken });
            //判断结果
            if (obj.Successful == false)
            {
                await ToastService.Error("验证码错误", obj.Error);
                return;
            }
            else
            {
                IsConfirmed = true;
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "检查验证码失败");
        }
    }

    private async Task ConfirmPassword()
    {
        try
        {
            //填充其他字段以通过验证
            Model.UserName = _dataCacheService.UserName;

            var obj = await _httpService.PostAsync<HistorUserChangePasswordModel, Result>("api/account/HistorUserChangePassword", Model);
            //判断结果
            if (obj.Successful == false)
            {
                await ToastService.Error("验证身份失败", obj.Error);
                if (obj.Error == "验证码错误")
                {
                    IsConfirmed = false;
                    StateHasChanged();
                }

            }
            else
            {
                await SwalService.ShowModal(new SwalOption()
                {
                    
                    Category = SwalCategory.Success,
                    Title = "验证身份成功",
                    Content = "验证身份成功，密码已重置，请重新登入"
                });
                // await ToastService.Success("验证身份成功", "验证身份成功，请登入");
                NavigationManager.NavigateTo(string.IsNullOrWhiteSpace(ReturnUrl) ? "/account/login/" : ToolHelper.Base64DecodeUrl(ReturnUrl));
            }
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "验证身份失败");
        }
    }

}
