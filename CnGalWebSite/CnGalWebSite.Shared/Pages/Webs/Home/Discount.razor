@inject HttpClient Http
@inject ToastService? ToastService
@inject IJSRuntime JS
@inject IDataCacheService _dataCacheService

<TitleTip Title="打折中的游戏" Description="Steam游戏折扣专题页，可以按价格，发行时间，好评率等排序"></TitleTip>

<style>
    .row {
        flex: 0;
    }
</style>
<div>
    @if (isReady == false)
    {
        <div class="  rounded shadow-sm  bg-opacity pt-3">

            <div class="row mt-2 ms-2 me-2" style="padding-right: 0;padding-left: 0;">
                <div class="col-12 col-md-12 col-lg-5 mt-1 mb-4">
                    <SkeletonAvatar Round="false" />
                </div>

                <div class="col-12 col-md-12 col-lg-6 mt-1 mb-2">
                    <SkeletonParagraph />
                </div>
            </div>
        </div>
        <div class="mt-3">
            <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-3 pb-3">
                <SkeletonParagraph />

            </div>
        </div>


        <div class=" mt-3">
            <div class="  rounded shadow-sm  ps-4 pe-4 pt-3 pb-3 bg-opacity rounded">
                <SkeletonParagraph />
            </div>
        </div>
        <div class="mt-3" style="padding-right: 0;padding-left: 0;">
            <div class="  rounded shadow-sm  ps-4 pe-4 pt-3 pb-3 bg-opacity rounded">
                <SkeletonParagraph />
                <div class="mt-2">
                </div>
                <SkeletonParagraph />
                <div class="mt-2">
                </div>
                <SkeletonParagraph />
            </div>
        </div>
    }
    else
    {
        <div>
            <CnGalWebSite.Shared.Component.Steam.ScreenGamesTip ValueChanged="ValueChanged"/>
        </div>
        <div class="row">
            @foreach (var item in _dataCacheService.DiscountPageCatcheHelper.Items.Skip((_dataCacheService.DiscountPageCatcheHelper.CurrentPage - 1) * _dataCacheService.DiscountPageCatcheHelper.MaxCount).Take(_dataCacheService.DiscountPageCatcheHelper.MaxCount))
            {
                <div class="@("mb-3 "+(_dataCacheService.DiscountPageCatcheHelper.SteamDisplayType== SteamDisplayType.LongCard?"col-12":"col-12 col-md-6 col-xxl-4"))">
                    <CnGalWebSite.Shared.Component.Steam.SteamInforViewTip Model="item" Type="_dataCacheService.DiscountPageCatcheHelper.SteamDisplayType" Purchased="_dataCacheService.DiscountPageCatcheHelper.PurchasedGames.Any(s=>s==item.Id)"/>
                </div>
            }


        </div>
        @if (_dataCacheService.DiscountPageCatcheHelper.TotalPages > 1)
        {
            <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaPagination Value="@_dataCacheService.DiscountPageCatcheHelper.CurrentPage" Length="@_dataCacheService.DiscountPageCatcheHelper.TotalPages" ValueChanged="OnPageClick" />
        }
        @if (_dataCacheService.DiscountPageCatcheHelper.Items.Count() == 0)
        {
            <NotFoundTip IsNeedLayput="true" />
        }
    }
</div>

@code {
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }
    bool isReady = false;



    protected override async Task OnInitializedAsync()
    {


    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                if (_dataCacheService.DiscountPageCatcheHelper.IsInit == false)
                {
                    _dataCacheService.DiscountPageCatcheHelper.Init(await Http.GetFromJsonAsync<List<SteamInforTipViewModel>>(ToolHelper.WebApiPath + "api/steam/GetAllGameSteamInfors", ToolHelper.options));

                    try
                    {
                        _dataCacheService.DiscountPageCatcheHelper.PurchasedGames = await Http.GetFromJsonAsync<List<int>>(ToolHelper.WebApiPath + "api/playedgame/GetUserInSteamGameIds", ToolHelper.options);
                    }
                    catch
                    {

                    }


                }

                isReady = true;
                StateHasChanged();

            }
            catch (Exception ex)
            {
                ErrorHandler.ProcessError(ex, "获取Steam折扣游戏列表失败");
            }
        }
    }

    public Task ValueChanged()
    {
        StateHasChanged();
        return Task.CompletedTask;
    }

    private Task OnPageClick(int pageIndex)
    {
        _dataCacheService.DiscountPageCatcheHelper.CurrentPage = pageIndex;
        StateHasChanged();
        return Task.CompletedTask;
    }
}
