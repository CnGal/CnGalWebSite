@inject HttpClient Http
@inject ToastService ToastService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject IDataCacheService _dataCatcheService
@inject IStructuredDataService _structuredDataService
@inject DialogService DialogService

@implements IDisposable

@if (string.IsNullOrWhiteSpace(EntryView.Name) == false)
{
    <TitleTip Title="@(EntryView.Name)" Description="@EntryView.BriefIntroduction" Image="@EntryView.MainPicture"></TitleTip>
}
else
{
    <TitleTip></TitleTip>
}

@if (_dataCatcheService.ThemeSetting.IsTransparent)
{
    @if (string.IsNullOrWhiteSpace(EntryView.SmallBackgroundPicture) == false)
    {
        <div id="web_bg" style="background-image: url(@EntryView.SmallBackgroundPicture)" class="d-none  bg-d-lg-block bgimage-ison "></div>
    }
    @if (string.IsNullOrWhiteSpace(EntryView.BackgroundPicture) == false)
    {
        <div id="web_bg" style="background-image: url(@EntryView.BackgroundPicture)" class=" d-none d-sm-block bgimage-ison"></div>
    }
}

@if (isNotFound)
{
    int temp = 0;
    <NotFoundEntry IsNeedLayput="true" EntryName="@(int.TryParse(Id,out temp)?"":ToolHelper.Base64DecodeName(Id))"></NotFoundEntry>
}
else
{
    @if (_dataCatcheService.EntryIndexPageCatche.Check(Id)||isReady)
    {
        <div class="row" itemscope itemtype="@(EntryView.Type== EntryType.Game?("http://schema.org/SoftwareApplication"):(EntryView.Type== EntryType.Role?("http://schema.org/Role"):(EntryView.Type== EntryType.ProductionGroup?("http://schema.org/Organization"):("http://schema.org/Person"))))">
            <div class="col-12 mb-4">
                @if (EntryView.IsHidden == true)
                {
                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Warning" Class="mb-3">
                        当前词条处于隐藏状态，如果你看到了这个提示，请立即联系管理员
                    </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>

                }

                @if (EntryView.Type == EntryType.Staff)
                {
                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Error" Class="mb-3">
                        这个词条可能涉及到现实人物，请勿过分较真，也请谨慎编辑，仔细斟酌词句
                    </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>
                }

                <div>
                    <CnGalWebSite.Shared.Component.Entries.NewVersion.MainInforCard Model="EntryView" OnRevoke="OnRevoke" OnPreEdit="OnPreEdit" />
                </div>
            </div>
            @if (_dataCatcheService.IsApp)
            {
                <div class="@(IsNoLeft?"d-none":"col-12 col-lg-4") ">
                    @if (EntryView.SteamId > 0 && EntryView.IsHideOutlink == false)
                    {
                        <CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>
                            <div class="mb-4">
                                <CnGalWebSite.Shared.Component.Entries.NewVersion.SteamInforCard Model="EntryView" />

                            </div>
                        </CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>

                    }
                    @if (EntryView.Information.Any())
                    {
                        <div class="mb-4">
                            <CnGalWebSite.Shared.Component.Entries.NewVersion.BasicInforCard Model="EntryView" OnRevoke="OnRevoke" />
                        </div>

                    }
                    @if (EntryView.Tags.Any())
                    {
                        <div class=" mb-4">
                            <CnGalWebSite.Shared.Component.Entries.NewVersion.TagsCard Model="EntryView" OnRevoke="OnRevoke" />
                        </div>

                    }
                    @if (EntryView.Type == EntryType.Game)
                    {
                        <CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>
                            <CnGalWebSite.Shared.MasaComponent.PC.Entries.PlayedGames.OverviewCard Id="EntryView.Id" Class="mb-4" />

                        </CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>
                    }
                </div>
                <div class="@(IsNoLeft?"col-12 ":"col-12 col-lg-8") ">

                    <div class="mb-4">
                        <MTabs @bind-Value="TabIndex" IconsAndText Grow Class="rounded shadow-sm bg-opacity "
                               >

                            <MTab Value="1">
                                首页<MIcon>mdi-home</MIcon>
                            </MTab>
                            <MTab Value="2">
                                相关<MIcon>fa fa-link </MIcon>
                            </MTab>
                            @if (EntryView.Staffs.Count > 0)
                            {
                                <MTab Value="3">
                                    Staff<MIcon>fa fa-sitemap</MIcon>
                                </MTab>
                            }

                        </MTabs>
                    </div>
                    <div>
                        <MTabsItems @bind-Value="TabIndex">
                            <MTabItem Value="1">
                                @if (EntryView.Audio.Any())
                                {
                                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>
                                        <div class="mb-4">
                                            <CnGalWebSite.Shared.Component.Entries.NewVersion.AudioCard Model="EntryView" OnRevoke="OnRevoke" />
                                        </div>

                                    </CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>
                                }
                                @if (EntryView.Pictures.Count != 0)
                                {
                                    <div class="mb-4">
                                        <CnGalWebSite.Shared.Component.Entries.NewVersion.ImagesCard Model="EntryView" OnRevoke="OnRevoke" />

                                    </div>
                                }


                                @if ((EntryView.Type == EntryType.Role || EntryView.Type == EntryType.Staff) && string.IsNullOrWhiteSpace(EntryView.MainPicture) == false)
                                {
                                    <div class="mb-4">
                                        <CnGalWebSite.Shared.Component.Entries.NewVersion.VerticalDrawingCard Model="EntryView" />
                                    </div>
                                }
                                <CnGalWebSite.Shared.Component.Entries.NewVersion.MainPageCard Model="EntryView" OnRevoke="OnRevoke" />
                                @if (EntryView.NewsOfEntry.Count != 0)
                                {
                                    <div class="mb-4">
                                        <CnGalWebSite.Shared.Component.Entries.NewVersion.NewsTimelineCard Model="EntryView" OnRevoke="OnRevoke" />
                                    </div>
                                }

                                <div>
                                    @if (EntryView.CanComment)
                                    {

                                        <CnGalWebSite.Shared.MasaComponent.PC.Comments.CommentTip CanComment="EntryView.CanComment" CanDeleted="CanDeleted" ObjectId="@EntryView.Id.ToString()" Type="CommentType.CommentEntries" />
                                    }
                                </div>
                            </MTabItem>
                            <MTabItem Value="2">
                                <CnGalWebSite.Shared.MasaComponent.PC.Videos.Relevances.GroupCard Model="EntryView.VideoRelevances"/>

                                <EntryRelevancesNormalListViewTip Model="EntryView" OnRevoke="OnRevoke"></EntryRelevancesNormalListViewTip>
                                
                                <PeripheryOverViewTip EntryId="EntryView.Id" IsEdit="EntryView.IsEdit" IsGameView="EntryView.Type == EntryType.Game" />
                            </MTabItem>

                            @if (EntryView.Staffs.Count > 0)
                            {
                                <MTabItem Value="3">
                                    <CnGalWebSite.Shared.Component.Entries.NewVersion.StaffInforCard Model="EntryView" />
                                </MTabItem>
                            }
                        </MTabsItems>
                    </div>

                </div>


            }
            else
            {
                <div class="@(IsNoLeft?"col-12 ":"col-12 col-lg-8  order-2 order-lg-1") ">

                    <div>
                        @if (EntryView.Audio.Any())
                        {
                            <CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>
                                <div class="mb-4">
                                    <CnGalWebSite.Shared.Component.Entries.NewVersion.AudioCard Model="EntryView" OnRevoke="OnRevoke" />
                                </div>

                            </CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>
                        }
                        @if (EntryView.Pictures.Count != 0)
                        {
                            <div class="mb-4">
                                <CnGalWebSite.Shared.Component.Entries.NewVersion.ImagesCard Model="EntryView" OnRevoke="OnRevoke" />

                            </div>
                        }
                    <CnGalWebSite.Shared.MasaComponent.PC.Videos.Relevances.GroupCard Model="EntryView.VideoRelevances" />
                        @if (EntryView.Type == EntryType.Game && EntryView.IsScored)
                        {
                            <CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>
                                <CnGalWebSite.Shared.MasaComponent.PC.Entries.PlayedGames.OverviewCard Id="EntryView.Id" Class="mb-4" Large />

                            </CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>
                        }
                        <CnGalWebSite.Shared.Component.Entries.NewVersion.MainPageCard Model="EntryView" OnRevoke="OnRevoke" />
                        @if (EntryView.NewsOfEntry.Count != 0)
                        {
                            <div class="mb-4">
                                <CnGalWebSite.Shared.Component.Entries.NewVersion.NewsTimelineCard Model="EntryView" OnRevoke="OnRevoke" />

                            </div>
                        }
                        <EntryRelevancesNormalListViewTip Model="EntryView" OnRevoke="OnRevoke" RightDisplay />

                        <PeripheryOverViewTip EntryId="EntryView.Id" IsEdit="EntryView.IsEdit" Class="mb-4" IsGameView="EntryView.Type == EntryType.Game" />
                        <div>
                            @if (EntryView.CanComment)
                            {

                                <CnGalWebSite.Shared.MasaComponent.PC.Comments.CommentTip CanComment="EntryView.CanComment" CanDeleted="CanDeleted" ObjectId="@EntryView.Id.ToString()" Type="CommentType.CommentEntries" />
                            }
                        </div>
                    </div>


                </div>

                <div class="@(IsNoLeft?"d-none":"col-12 col-lg-4 order-1 order-lg-2") ">
                    @if (EntryView.Type == EntryType.Game && EntryView.IsScored == false)
                    {
                        <CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>
                            <CnGalWebSite.Shared.MasaComponent.PC.Entries.PlayedGames.OverviewCard Id="EntryView.Id" Class="mb-4" />

                        </CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>
                    }
                    @if (EntryView.SteamId > 0 && EntryView.IsHideOutlink == false)
                    {
                        <CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>
                            <div class="mb-4">
                                <CnGalWebSite.Shared.Component.Entries.NewVersion.SteamInforCard Model="EntryView" />

                            </div>

                        </CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>
                    }

                    @if (EntryView.Information.Any())
                    {
                        <div class="mb-4">
                            <CnGalWebSite.Shared.Component.Entries.NewVersion.BasicInforCard Model="EntryView" OnRevoke="OnRevoke" />
                        </div>

                    }

                    @if (EntryView.Tags.Any())
                    {
                        <div class=" mb-4">
                            <CnGalWebSite.Shared.Component.Entries.NewVersion.TagsCard Model="EntryView" OnRevoke="OnRevoke" />
                        </div>

                    }

                    @if ((EntryView.Type == EntryType.Role || EntryView.Type == EntryType.Staff) && string.IsNullOrWhiteSpace(EntryView.MainPicture) == false)
                    {
                        <div class="mb-4">
                            <CnGalWebSite.Shared.Component.Entries.NewVersion.VerticalDrawingCard Model="EntryView" />
                        </div>
                    }
                    @if (_dataCatcheService.IsApp == false && EntryView.Staffs.Count > 0)
                    {
                        <div class=" mb-4">
                            <CnGalWebSite.Shared.Component.Entries.NewVersion.StaffInforCard Model="EntryView" />
                        </div>
                    }
                    <EntryRelevancesNormalListViewTip Model="EntryView" OnRevoke="OnRevoke" LeftDisplay />

                </div>

            }

        </div>
    }
    else
    {
        <div class="  rounded shadow-sm  bg-opacity pt-3">

            <div class="row mt-2 ms-2 me-2">
                <div class="col-12 col-md-12 col-lg-5 mt-1 mb-4">
                    <SkeletonAvatar Round="false" />
                </div>

                <div class="col-12 col-md-12 col-lg-6 mt-1 mb-2">
                    <SkeletonParagraph />
                </div>
            </div>
        </div>
        <div class="mt-3">
            <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-3 pb-3">
                <SkeletonParagraph />

            </div>
        </div>


        <div class=" mt-3">
            <div class="  rounded shadow-sm  ps-4 pe-4 pt-3 pb-3 bg-opacity rounded">
                <SkeletonParagraph />
            </div>
        </div>
        <div class="mt-3">
            <div class="  rounded shadow-sm  ps-4 pe-4 pt-3 pb-3 bg-opacity rounded">
                <SkeletonParagraph />
                <div class="mt-2">
                </div>
                <SkeletonParagraph />
                <div class="mt-2">
                </div>
                <SkeletonParagraph />
            </div>
        </div>
    }

}
@if (isFirstLoad==false)
{
    <MSnackbar Timeout="-1" @bind-Value="isLoading" Text
                Style="min-width:180px;" Color="primary"
               Elevation="24">
        <div style="display: flex; justify-content: center; align-items: center;">
            <MProgressCircular Size="@("20px")" Width="2" Class="me-4" Indeterminate Color="primary">
            </MProgressCircular>
            正在跳转......
        </div>

    </MSnackbar>
}

<CnGalWebSite.Shared.MasaComponent.Shared.Components.TrackEvent DataType="TrackEventDataType.Entry" EventType="TrackEventType.View" ObjectId="@EntryView.Id.ToString()"
                                                                ObjectName="@EntryView.Name"/>

@code {

    [Parameter]
    public string Id { get; set; }

    public bool IsNoLeft
    {
        get
        {
            return (EntryView.Information.Count == 0 && (EntryView.SteamId <= 0 || EntryView.IsHideOutlink) && EntryView.Tags.Count == 0 && (EntryView.OtherRelevances.Count == 0 || EntryView.IsHideOutlink) && EntryView.Roles.Count == 0 &&
                      ((EntryView.Type == EntryType.Role || EntryView.Type == EntryType.Staff) && string.IsNullOrWhiteSpace(EntryView.MainPicture) == false) == false && (_dataCatcheService.IsApp == false && EntryView.Staffs.Count > 0) == false);
        }
    }

    public StringNumber TabIndex { get; set; } = 1;

    bool isReady = false;
    bool isLoading = false;
    bool isNotFound = false;
    bool isFirstLoad = true;
    public string CurrentUserRank { get; set; }

    public EntryIndexViewModel EntryView { get; set; } = new EntryIndexViewModel();


    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }


    public bool IsAdmin { get; set; } = false;
    public bool CanDeleted { get; set; }
    string LastLookName = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            NavigationManager.LocationChanged -= LocationChanged;
            NavigationManager.LocationChanged += LocationChanged;
            isFirstLoad = false;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }

    public async Task Refresh()
    {
        try
        {
            isNotFound = false;
            //获取词条信息
            EntryView = await _dataCatcheService.EntryIndexPageCatche.GetCache(Id);
            //判断如果名称为空则返回主页
            if (string.IsNullOrWhiteSpace(EntryView.Name))
            {
                NavigationManager.NavigateTo("/entries/home");
            }

            var userState = await authenticationStateTask;
            var user = userState.User;
            if (user.IsInRole("Editor"))
            {
                IsAdmin = true;
                CanDeleted = true;
            }


            //生成轮播结构数据
            await GenerateCarouselStructuredDataJson();

            isReady = true;
            StateHasChanged();

        }
        catch (Exception exc)
        {
            isNotFound = true;
            isReady = true;
            StateHasChanged();
        }
    }

    public async Task GenerateCarouselStructuredDataJson()
    {
        var urls = new List<string>();
        urls.AddRange(EntryView.EntryRelevances.Select(s => NavigationManager.BaseUri + "entries/" + s.Id));
        urls.AddRange(EntryView.Roles.Select(s => NavigationManager.BaseUri + "entries/" + s.Id));
        urls.AddRange(EntryView.ProductionGroups.Select(s => NavigationManager.BaseUri + "entries/" + s.Id));
        urls.AddRange(EntryView.StaffGames.Select(s => NavigationManager.BaseUri + "entries/" + s.Id));
        urls.AddRange(EntryView.ArticleRelevances.Select(s => NavigationManager.BaseUri + "articles/" + s.Id));
        await _structuredDataService.SetStructuredData(urls);
    }


    [Inject]
    [NotNull]
    private SwalService? SwalService { get; set; }
    private async Task OnRevoke(Operation operation)
    {
        //确认
        var op = new SwalOption()
        {
            Title = "确认撤销编辑",
            Content = "撤销编辑后会删除数据，无法恢复，请谨慎操作",

            Category = SwalCategory.Warning,
        };
        var ret = await SwalService.ShowModal(op);
        if (ret == false)
        {
            return;
        }
        //上传
        try
        {
            var result = await Http.PostAsJsonAsync<RevokeExamineModel>(ToolHelper.WebApiPath + "api/entries/RevokeExamine", new RevokeExamineModel { Id = EntryView.Id, ExamineType = operation });
            string jsonContent = result.Content.ReadAsStringAsync().Result;
            Result obj = JsonSerializer.Deserialize<Result>(jsonContent, ToolHelper.options);
            //判断结果
            if (obj.Successful == false)
            {
                await ToastService.Error("撤销审核请求失败", obj.Error);
            }
            else
            {
                await ToastService.Success("撤销审核请求成功", "撤销审核请求成功");
                //修改各部分编辑状态
                switch (operation)
                {
                    case Operation.EstablishMain:
                        EntryView.MainState = EditState.Normal;
                        break;
                    case Operation.EstablishMainPage:
                        EntryView.MainPageState = EditState.Normal;
                        break;
                    case Operation.EstablishAddInfor:
                        EntryView.InforState = EditState.Normal;
                        break;
                    case Operation.EstablishRelevances:
                        EntryView.RelevancesState = EditState.Normal;
                        break;
                    case Operation.EstablishImages:
                        EntryView.ImagesState = EditState.Normal;
                        break;
                    case Operation.EstablishTags:
                        EntryView.TagState = EditState.Normal;
                        break;
                    case Operation.EstablishAudio:
                        EntryView.AudioState = EditState.Normal;
                        break;
                }
                _dataCatcheService.EntryIndexPageCatche.Clean(Id);
                await Refresh();
            }
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "撤销审核请求失败");
        }
    }

    public void OnPreEdit(bool value)
    {
        EntryView.IsEdit = value;
        StateHasChanged();
        
    }


    public async void LocationChanged(object sender, LocationChangedEventArgs args)
    {
        if (Id != EntryView.Id.ToString())
        {
            if (_dataCatcheService.EntryIndexPageCatche.Check(Id) == false)
            {
                isLoading = true;
                StateHasChanged();
                await Refresh();
                isLoading = false;
                StateHasChanged();
            }
            else
            {
                await Refresh();
            }

        }
    }

    #region 释放实例

    public void Dispose()
    {

        NavigationManager.LocationChanged -= LocationChanged;

        GC.SuppressFinalize(this);
    }
    #endregion
}
