@inject HttpClient Http

@inject ILocalStorageService _localStorage
@inject ToastService? ToastService
@inject IServiceProvider Provider
@inject NavigationManager NavigationManager


@if (string.IsNullOrWhiteSpace(Model.Name) == false)
{
    <TitleTip Title="@("编辑 " + Model.Name)"></TitleTip>
}
else
{
    <TitleTip></TitleTip>

}

<AutoSaveTip TItem="EditMainViewModel" Item="Model" DataLoaded="DataLoaded" @ref="autoSave" />

<div>
    <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Cards.EditSummaryTip Type="ExaminedNormalListModelType.Entry" Class="mb-3" />
    @if (isReady == false)
    {
        <div class="  rounded shadow-sm  bg-opacity rounded ps-4 pe-4 pt-4 pb-4">
            <SkeletonParagraph />
            <div class="mt-2">
            </div>
            <SkeletonParagraph />
            <div class="mt-2">
            </div>
            <SkeletonParagraph />
            <div class="mt-2">
            </div>
            <SkeletonParagraph />
            <div class="mt-2">
            </div>
            <SkeletonParagraph />
        </div>
    }
    else
    {

        @if (Model.Type == EntryType.Staff)
        {
            <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Error" Class="mb-3">
                这个词条可能涉及到现实人物，请勿过分较真，也请谨慎编辑，仔细斟酌词句
            </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>
        }

        <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer Title="@($"编辑 {Model.Name}（Id:{Model.Id}）")" Icon="fa fa-fw  fa-codepen" Outline>
            <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Entries.MainCard Model="Model" Class="mb-4" />
            <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Buttons.SubmitButton OnSubmit="OnSubmit" Model="Model" />
        </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer>
    }
</div>

@code {


        [Parameter]
        public string Id { get; set; }
    public EditMainViewModel Model { get; set; } = new EditMainViewModel();
    private bool isReady = false;
    [NotNull]
    private ValidateForm? ComplexForm { get; set; }
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }

    AutoSaveTip<EditMainViewModel> autoSave { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                //获取词条信息
                Model = await Http.GetFromJsonAsync<EditMainViewModel>(ToolHelper.WebApiPath + "api/entries/editmain/" + Id, ToolHelper.options);
                isReady = true;
                StateHasChanged();
            }
            catch (Exception ex)
            {
                ErrorHandler.ProcessError(ex, "获取编辑词条主要信息失败");
            }
        }
    }

    private async Task OnSubmit()
    {
        //上传
        try
        {
            var result = await Http.PostAsJsonAsync<EditMainViewModel>(ToolHelper.WebApiPath + "api/entries/editmain", Model);
            string jsonContent = result.Content.ReadAsStringAsync().Result;
            Result obj = JsonSerializer.Deserialize<Result>(jsonContent, ToolHelper.options);
            //判断结果
            if (obj.Successful == false)
            {
                if (obj.Error == "该词条的名称与其他词条重复")
                {
                    ComplexForm.SetError<EditMainViewModel>(f => f.Name, "已经存在该名称的词条");
                }
                await ToastService.Error("保存词条主要信息失败", obj.Error ?? "请上传图片");
            }
            else
            {
                autoSave.Clean();
                await ToastService.Success("保存成功", "保存词条主要信息成功，等待审核通过");
                NavigationManager.NavigateTo(Provider, "/entries/index/" + Model.Id, Model.Name, "fa fa-codepen");
            }
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "保存词条主要信息失败");
        }
    }


    private void DataLoaded(EditMainViewModel model)
    {
        isReady = false;
        StateHasChanged();
        Model = model;
        isReady = true;
        StateHasChanged();
        
    }
}
