@inject ToastService ToastService
@inject IHttpService _httpService
@inject IDataCacheService _dataCacheService
@inject IStructuredDataService _structuredDataService
@inject NavigationManager NavigationManager
@inject IMauiService _mauiService
<TitleTip></TitleTip>

<div itemscope itemtype="https://schema.org/WebSite" style="display:none;">
    <meta itemprop="url" content="https://m.cngal.com/" />
    <form itemprop="potentialAction" itemscope itemtype="https://schema.org/SearchAction">
        <meta itemprop="target" content="https://m.cngal.com/search?Text={search_term_string}" />
        <input itemprop="query-input" type="text" name="search_term_string" required />
        <input type="submit" />
    </form>
</div>

<style>
    .font-color {
        color: var(--main-color) !important;
    }
</style>
<MTabsItems @bind-Value="_dataCacheService.HomeTabIndex" Class="pb-12">
    <MTabItem Value="0">
        <CnGalWebSite.Shared.AppComponent.Pages.Home.ListCarousel />

        <CnGalWebSite.Shared.AppComponent.Pages.Home.Index />
    </MTabItem>
    <MTabItem Value="1">
        <CnGalWebSite.Shared.MasaComponent.App.Home.Entries.FreeGameGroup Class="mb-3" />
        <CnGalWebSite.Shared.MasaComponent.App.Home.Entries.DiscountGameGroup Class="mb-3" />
        <CnGalWebSite.Shared.MasaComponent.App.Home.Entries.GameRoleGroup Class="mb-3" />

    </MTabItem>
    <MTabItem Value="2">
        <CnGalWebSite.Shared.MasaComponent.PC.Home.ThematicPages.HomeCard />
    </MTabItem>
    <MTabItem Value="3">
        <CnGalWebSite.Shared.MasaComponent.App.Home.Articles.RandomArticleGroup Class="mb-3" />
        <CnGalWebSite.Shared.MasaComponent.App.Home.Articles.WeeklyNewsGroup Class="mb-3" />

    </MTabItem>
    <MTabItem Value="4">
        <CnGalWebSite.Shared.AppComponent.Pages.Home.Others.Index />
    </MTabItem>

    <MTabItem Value="5">
        <AuthorizeView>
            <Authorized>
                <CnGalWebSite.Shared.Pages.Webs.Space.Index Id="@_dataCacheService.UserInfor.Id"></CnGalWebSite.Shared.Pages.Webs.Space.Index>
            </Authorized>
            <NotAuthorized>
                <div class="w-100" style="height: calc(100vh); display: flex; justify-content: center; align-items: center; ">
                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaButton Text="登入后进入个人空间" Icon="mdi-login" OnClick="OnLogin" />
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </MTabItem>
</MTabsItems>

<MFooter Fixed Padless>
    <MBottomNavigation @bind-Value="_dataCacheService.HomeTabIndex" Shift Grow>
        <MButton ActiveClass="font-color">
            <span>主页</span>

            <MIcon>mdi-home-outline </MIcon>
        </MButton>

        <MButton ActiveClass="font-color">
            <span>词条</span>

            <MIcon>mdi-archive-outline</MIcon>
        </MButton>
        <MButton ActiveClass="font-color">
            <span>专题</span>

            <MIcon>mdi-align-vertical-top </MIcon>
        </MButton>

        <MButton ActiveClass="font-color">
            <span>文章</span>

            <MIcon>mdi-sticker-text-outline </MIcon>
        </MButton>

        <MButton ActiveClass="font-color">
            <span>广场</span>

            <MIcon>mdi-av-timer</MIcon>
        </MButton>



        @*<MButton ActiveClass="font-color">
            <span>空间</span>

            <MIcon>mdi-account-outline</MIcon>
        </MButton>*@
    </MBottomNavigation>
</MFooter>

@code {

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    protected override async Task OnInitializedAsync()
    {

        try
        {
            //生成轮播结构数据
            await GenerateCarouselStructuredDataJson();

        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取轮播结构化数据失败");
        }

    }
    protected override async Task OnAfterRenderAsync(bool firstRender)

    {
        if(firstRender)
        {
            //通知MAUI
            _mauiService.OnLoaded();
        }
    }
    public async Task GenerateCarouselStructuredDataJson()
    {
        var urls = new List<string>();
        urls.AddRange((await _dataCacheService.HomeListCardsCache.GetCache("api/home/GetHomeRecentIssuelGameView")).Select(s => s.Url));
        urls.AddRange((await _dataCacheService.HomeListCardsCache.GetCache("api/home/GetHomeNewestGameView")).Select(s => s.Url));
        urls.AddRange((await _dataCacheService.HomeListCardsCache.GetCache("api/home/GetHomeRecentEditView")).Select(s => s.Url));
        urls.AddRange((await _dataCacheService.HomeListCardsCache.GetCache("api/home/GetHomeNoticesView")).Select(s => s.Url));
        urls.AddRange((await _dataCacheService.HomeListCardsCache.GetCache("api/home/GetHomeArticlesView")).Select(s => s.Url));
        urls.AddRange((await _dataCacheService.HomeListCardsCache.GetCache("api/home/GetHomeNewsView")).Select(s => s.Url));

        await _structuredDataService.SetStructuredData(urls);
    }

    protected void OnLogin()
    {
        InteractiveRequestOptions requestOptions = new()
        {
            Interaction = InteractionType.SignIn,
            ReturnUrl = NavigationManager.Uri,
        };


        if (ToolHelper.IsSSR)
        {
            NavigationManager.NavigateTo($"Account/Login?returnUrl={NavigationManager.Uri}", true);
        }
        else
        {
            NavigationManager.NavigateToLogin("authentication/login", requestOptions);
        }
    }

}
