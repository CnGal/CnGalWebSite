@page "/home/setting"

@inject IHttpService _httpService

@inject ILocalStorageService _localStorage
@inject ToastService? ToastService

@inject NavigationManager NavigationManager
@inject IDataCacheService _dataCacheService


<TitleTip Title="设置"></TitleTip>



<CnGalWebSite.Shared.AppComponent.Normal.Links.ListIconText Model="Model" ClassName="mb-4" />

<AuthorizeView>
    <Authorized>
        <div class="mt-3" style=" display: flex; justify-content: center;">
            <Button style="width:100px" Color="Color.Dark" Text="退出登录" ButtonStyle="ButtonStyle.Round" @onclick="@(()=>NavigationManager.NavigateTo("/account/logout"))" />
        </div>
    </Authorized>
</AuthorizeView>


@code {
    private List<AppComponent.Normal.Links.IconTextModel> Model = new List<AppComponent.Normal.Links.IconTextModel>();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var user = await authenticationStateTask;
        if (user.User.Identity.IsAuthenticated)
        {
            Model.AddRange(new List<AppComponent.Normal.Links.IconTextModel>
        {
                new AppComponent.Normal.Links.IconTextModel
                {
                    Text="账户与安全",
                    Url="/space/AccountSecurity/"+_dataCacheService.UserInfor.Id
                },
                new AppComponent.Normal.Links.IconTextModel
                {
                    Text="修改个人资料",
                    Url="/space/editdata/"+_dataCacheService.UserInfor.Id
                }
            });
        }

        var themeMode = _dataCacheService.ThemeSetting.IsDark ? "深色" : "明亮";
        var bgMode = _dataCacheService.ThemeSetting.IsTransparent ? "透明" : "不透明";
        var color = _dataCacheService.ThemeSetting.Theme switch
        {
            "color1" => "天空蓝",
            "color2" => "草原绿",
            "color3" => "CnGal粉",
            "color4" => "金桔黄",
            "color5" => "湛蓝绿",
            "color6" => "基佬紫",
            _ => "",
        };
        Model.AddRange(new List<AppComponent.Normal.Links.IconTextModel>
    {
            new AppComponent.Normal.Links.IconTextModel
            {
                Text="背景模式："+bgMode,
                Url="/home/themes/setbgmode"
            },
            new AppComponent.Normal.Links.IconTextModel
            {
                Text="主题模式："+themeMode,
                Url="/home/themes/setlighting"
            },

                new AppComponent.Normal.Links.IconTextModel
            {
                Text="主题颜色："+color,
                Url="/home/themes/setcolor"
            },
            new AppComponent.Normal.Links.IconTextModel
            {
                Text="关于我们",
                Url="/home/about"
            }
        });
    }
}
