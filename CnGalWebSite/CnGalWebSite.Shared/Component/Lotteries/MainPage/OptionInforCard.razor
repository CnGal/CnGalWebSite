@inject IHttpService _httpService

@inject ToastService? ToastService
@inject IServiceProvider Provider
@inject NavigationManager NavigationManager
@inject DialogService DialogService

<div class="rounded shadow-sm  bg-opacity mb-4 pt-4">
    <div style=" display: flex; flex-direction: column; align-items: center; ">
        <img src="https://res.cngal.org/_content/CnGalWebSite.Shared/images/UserMessagesNotFound.png" style="max-width:250px;width:100%" class="ps-2 pe-2" />
        @if (isReady)
        {
            @if (StateModel == null)
            {
                @if (ViewModel.EndTime < DateTime.Now.ToCstTime())
                {
                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Warning" Outline>
                        没有参与这个抽奖哦，下次再来吧
                    </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>
                }
                else
                {
                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaButton Text="登入后参与抽奖" Icon="@IconType.Login.ToIconString()" OnClick="OnLogin" Class="mt-3 mb-4" />
                }
            }
            else
            {
                @if (StateModel.State == UserLotteryState.NotInvolved)
                {
                    @if (ViewModel.EndTime < DateTime.Now.ToCstTime())
                    {
                        <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Warning" Outline>
                            没有参与这个抽奖哦，下次再来吧
                        </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>
                    }
                    else if (ViewModel.BeginTime > DateTime.Now.ToCstTime())
                    {
                        <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Warning" Outline>
                            抽奖还没有开始呢，再等一会吧
                        </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>
                    }
                    else
                    {
                        <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaButton Text="参与抽奖" Icon="@IconType.Lottery.ToIconString()" OnClick="OnParticipateInLottery" IsAsync Class="mt-4 mb-4" />
                    }
                }
                else if (StateModel.State == UserLotteryState.NoCondition)
                {
                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Warning" Outline>
                        没有满足抽奖条件哦，看看旁边的说明吧
                    </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>
                }
                else if (StateModel.State == UserLotteryState.NotWin)
                {
                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Info" Outline>
                        没有中奖欸，呜~~~
                    </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>

                }
                else if (StateModel.State == UserLotteryState.WaitingDraw)
                {
                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Info" Outline>
                        给，这是你的号码，记得来看结果哦~
                    </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>

                }
                else if (StateModel.State == UserLotteryState.Win && StateModel.Award != null)
                {
                    @if (StateModel.Award.Type == LotteryAwardType.ActivationCode)
                    {
                        <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Success" Outline>
                            欸欸欸，中奖了欸，来 <a @onclick="OnLookPrize" class="success--text fw-bold">看看激活码吧</a><br />
                            你的奖品是：<strong> @StateModel.Award.Name</strong>
                        </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>
                    }
                    else if (StateModel.Award.Type == LotteryAwardType.Integral)
                    {
                        <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Success" Outline>
                            恭喜你中奖了，已经把积分打到你的账户里了哦<br />
                            你的奖品是：<strong> @StateModel.Award.Name</strong>
                        </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>
                    }
                }
                else if (StateModel.State == UserLotteryState.WaitAddress)
                {
                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Success" Outline>
                        中奖啦，快点 <a @onclick="EditUserAddress" class="success--text fw-bold">填写收货地址</a> 吧<br />
                        你的奖品是：<strong> @StateModel.Award.Name</strong>
                    </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>
                }
                else if (StateModel.State == UserLotteryState.WaitShipments)
                {
                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Success" Outline>
                        看板娘正在努力发货中，还可以 <a @onclick="EditUserAddress" class="success--text fw-bold">修改地址</a> 哦<br />
                        你的奖品是：<strong> @StateModel.Award.Name</strong>
                    </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>
                }
                else if (StateModel.State == UserLotteryState.Shipped)
                {
                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert Type="AlertTypes.Success" Outline>
                        发货啦，记得给五星好评哦<br />
                        你的奖品是：<strong> @StateModel.Award.Name</strong>
                    </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaAlert>
                }
            }

        }
    </div>

</div>

@if (isReady && StateModel != null && StateModel.State == UserLotteryState.WaitingDraw)
{
    <div class="rounded shadow-sm  bg-opacity mb-4 p-4">
        <div style="display: flex;align-items: center;">
            <div class="swal2-icon m-0 me-1 border-success" style="height: 10em; width: 10em; display: flex; align-items: center; border: .5em solid transparent;">
                <div class="text-success" style=" font-size: 3rem; ">@StateModel.Number</div>
            </div>
        </div>
    </div>
}

<CnGalWebSite.Shared.MasaComponent.Shared.Components.DeviceIdentification @ref="deviceIdentification" />

@code {
    [Parameter]
    public LotteryViewModel ViewModel { get; set; }

    public UserLotteryStateModel StateModel { get; set; }

    bool isReady = false;
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    CnGalWebSite.Shared.MasaComponent.Shared.Components.DeviceIdentification deviceIdentification;

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
        isReady = true;
    }

    public async Task Refresh()
    {
        var user = await authenticationStateTask;
        if (user.User.Identity.IsAuthenticated)
        {
            try
            {
                StateModel = await _httpService.GetAsync<UserLotteryStateModel>("api/lotteries/GetUserLotteryState/" + ViewModel.Id);
                StateHasChanged();
            }
            catch (Exception ex)
            {
                ErrorHandler.ProcessError(ex, "获取用户抽奖状态失败");
            }
        }

    }

    public async Task OnParticipateInLottery()
    {
        try
        {
            var obj = await _httpService.PostAsync<ParticipateInLotteryModel, Result>("api/lotteries/ParticipateInLottery", new ParticipateInLotteryModel
            {
                Id = ViewModel.Id,
                Identification = await deviceIdentification.GetDeviceIdentificationModel()
            });
            if (obj.Successful)
            {
                await ToastService.Success("参与抽奖成功", "参与抽奖成功");
                await Refresh();
            }
            else
            {
                await ToastService.Error("参与抽奖失败", obj.Error);
            }
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "参与抽奖失败");
        }
    }

    protected void OnLogin()
    {
        InteractiveRequestOptions requestOptions = new()
        {
            Interaction = InteractionType.SignIn,
            ReturnUrl = NavigationManager.Uri,
        };


        if (ToolHelper.IsSSR)
        {
            NavigationManager.NavigateTo($"Account/Login?returnUrl={NavigationManager.Uri}", true);
        }
        else
        {
            NavigationManager.NavigateToLogin("authentication/login", requestOptions);
        }
    }

    public async Task OnLookPrize()
    {
        var option = new DialogOption()
        {
            Title = "查看奖品",
            Size = Size.Medium
        };
        option.BodyTemplate = BootstrapDynamicComponent.CreateComponent<PrizePage.LookPrizeTip>(new Dictionary<string, object>
        {
            [nameof(PrizePage.LookPrizeTip.Id)] = ViewModel.Id,
        }).Render();
        await DialogService.Show(option);
    }

    public async Task EditUserAddress()
    {
        var model = new EditUserAddressModel();
        try
        {
            model = await _httpService.GetAsync<EditUserAddressModel>("api/space/EditUserAddress");
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取编辑用户地址信息失败");
        }

        var items = Utility.GenerateEditorItems<EditUserAddressModel>();
        var editItem = items.First(i => i.GetFieldName() == nameof(EditUserAddressModel.Address));
        editItem.Rows = 3;

        var option = new EditDialogOption<EditUserAddressModel>()
        {
            Title = "编辑收货地址",
            Model = model,
            Items = items,
            Size = Size.Large,
            OnEditAsync = async context =>
            {
                // Trace.Log("保存按钮被点击");
                var item = (EditUserAddressModel)context.Model;

                try
                {
                    var obj = await _httpService.PostAsync<EditUserAddressModel, Result>("api/space/EditUserAddress", item);
                    //判断结果
                    if (obj.Successful == false)
                    {
                        await ToastService.Error("编辑收货地址失败", obj.Error);
                        return false;
                    }
                    else
                    {
                        await ToastService.Success("编辑收货地址成功", "编辑收货地址成功");
                        await Refresh();
                        return true;
                    }
                }
                catch (Exception ex)
                {
                    ErrorHandler.ProcessError(ex, "编辑收货地址失败");
                    return false;
                }
            }
        };

        await DialogService.ShowEditDialog(option);
    }
}
