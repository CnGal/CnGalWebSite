
<EditGameRecordTip @ref="editGameRecordTip" OnChanged="OnChanged" />
<GameRecordViewTip @ref="gameRecordViewTip" IsCurrentUser="IsCurrentUser" OnEdit="OnEdit" OnChanged="OnChanged" />

<div class="row">
    @foreach (var item in Model.Where(s => s.IsHidden == false && (s.ShowPublicly || IsCurrentUser)))
    {
        <div class="col-6 col-md-6 col-lg-4 col-xxl-3 mb-3">
            <GameRecordViewCard Model="item" OnShow="OnShow" />
        </div>
    }
</div>
@if (Model.Any(s => s.IsHidden) && IsCurrentUser)
{

    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer Title="折叠的项目" Icon="fa fa-fw fa-star" @bind-IsCollapsed="IsCollapsed" Class="mb-3" Collapable>

        <div class="row">
            @foreach (var item in Model.Where(s => s.IsHidden))
            {
                <div class="col-6 col-md-6 col-lg-4 col-xxl-3 mb-3">
                    <GameRecordViewCard Model="item" OnShow="OnShow" />
                </div>
            }
        </div>

    </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer>
}


@code {
    [Parameter]
    public List<GameRecordViewModel> Model { get; set; }

    [Parameter]
    public bool IsCurrentUser { get; set; }

    EditGameRecordTip editGameRecordTip;
    GameRecordViewTip gameRecordViewTip;

    public bool IsCollapsed { get; set; } = true;

    public void OnChanged()
    {
        StateHasChanged();
        
    }

    public async Task OnShow(GameRecordViewModel model)
    {
        if (gameRecordViewTip != null)
        {
            gameRecordViewTip.Refresh(true, model);
        }
    }

    public async Task OnEdit(GameRecordViewModel model)
    {
        if (editGameRecordTip != null)
        {
            await editGameRecordTip.Refresh(true, model.GameId, model);
        }
    }
}
