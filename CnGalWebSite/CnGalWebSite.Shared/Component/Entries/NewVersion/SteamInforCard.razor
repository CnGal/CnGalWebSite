@inject IHttpService _httpService


<CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer Title="Steam信息" Icon="@IconType.Steam.ToIconString()" >
    <div class="row" itemprop="offers" itemscope itemtype="https://schema.org/Offer">
        @if (IsReady)
        {
            @if (SteamInfor.PriceNow > 0)
            {
                <span class="col-12 d-flex">
                    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaIcon Type="IconType.Price" />
                    <span class="me-2">当前价格：¥</span>
                    @if (SteamInfor.CutNow > 0)
                    {
                        <s class="me-2">@((SteamInfor.OriginalPrice/100.0).ToString(" 0.00"))</s>
                    }
                    <span> @((SteamInfor.PriceNow/100.0).ToString("0.00") + (SteamInfor.CutNow == 0 ? "" : " - 折扣 " + SteamInfor.CutNow + "%"))</span>
                </span>
                @if (SteamInfor.CutLowest > 0)
                {
                    <BasicInforAloneTip Icon="@IconType.Chart" Text="@("历史最低：" + SteamInfor.PriceLowestString + (SteamInfor.CutLowest == 0 ? "" : " - 折扣 " + SteamInfor.CutLowest + "%"))" Class="col-12" />
                }
            }
            else if (SteamInfor.PriceNow == 0)
            {
                <BasicInforAloneTip Icon="@IconType.Free" Text="当前价格：¥ 0.00 - Free" Class="col-12" />

            }
            else if (SteamInfor.PriceNow == -1)
            {
                <BasicInforAloneTip Icon="@IconType.IndeterminateTime" Text="未发售" Class="col-12" />
                <meta itemprop="availability" content="PreOrder" />

            }
            else if (SteamInfor.PriceNow == -2)
            {
                @if (SteamInfor.OriginalPrice > 0)
                {
                    <span class="col-12">
                        <i class="@IconType.Price"></i>&nbsp; &nbsp;
                        <span>价格：¥</span>

                        <span>  @((SteamInfor.OriginalPrice / 100.0).ToString(" 0.00") + "（数据未更新）")</span>

                    </span>
                }
                else if (SteamInfor.OriginalPrice == 0)
                {
                    <BasicInforAloneTip Icon="@IconType.OutOfDate" Text="价格：¥ 0.00 - Free（数据未更新）" Class="col-12" />
                }
                else
                {
                    <BasicInforAloneTip Icon="@IconType.OutOfDate" Text="数据未更新" Class="col-12" />
                }
                <meta itemprop="availability" content="SoldOut" />
            }
            else if (SteamInfor.PriceNow == -3)
            {
                <BasicInforAloneTip Icon="@IconType.Takedown" Text="已下架" Class="col-12" />
                <meta itemprop="availability" content="SoldOut" />
            }
            @if (SteamInfor.PlayTime > 0)
            {
                <BasicInforAloneTip Icon="@IconType.DeterminedTime" Text="@($"平均游玩时长：{SteamInfor.PlayTime:0.0} 小时")" Class="col-12" />
            }
            @if (SteamInfor.EstimationOwnersMax > 0)
            {
                <BasicInforAloneTip Icon="@IconType.Users" Text="@($"拥有人数（估计）：{ (SteamInfor.EstimationOwnersMin == 0 ? $"< {SteamInfor.EstimationOwnersMax:#,#}" : $"> {SteamInfor.EstimationOwnersMin:#,#}")}")" Class="col-12" />
            }
            @if (SteamInfor.EvaluationCount > 0)
            {
                <BasicInforAloneTip Icon="@IconType.ThumbsUp" Text="@($"{SteamInfor.RecommendationRate}% 好评（{SteamInfor.EvaluationCount}条评测）")" Class="col-12" />

            }


            @if (SteamInfor.OriginalPrice >= 0)
            {
                <meta itemprop="priceCurrency" content="CNY" />
                <meta itemprop="price" content="@(SteamInfor.OriginalPrice/100.0)" />
            }
        }

        <BasicInforAloneTip Icon="@IconType.Link" Text="商店页面：" Url="@("https://store.steampowered.com/app/" + Model.SteamId)" Class="col-12 text-truncate-1" ItemProp="url" />
    </div>
</CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer>

@code {
    public SteamInfor SteamInfor { get; set; } = new SteamInfor();

    [Parameter]
    public EntryIndexViewModel Model { get; set; }

    public bool IsReady = false;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            if (Model.SteamId == 0 || Model.Id == 0)
            {
                return;
            }
            SteamInfor = await _httpService.GetAsync<SteamInfor>("api/steam/Getsteaminfor/" + Model.SteamId + "/" + Model.Id);
            IsReady = true;
            StateHasChanged();
        }
        catch (Exception exc)
        {
            IsReady = true;
            StateHasChanged();
        }

    }

}
