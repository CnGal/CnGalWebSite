@inject ToastService ToastService
@inject IHttpService _httpService
@inject IDataCacheService _dataCacheService
@inject NavigationManager NavigationManager
@inject IPageModelCatche<List<LatastVideoItemModel>>  _pageModelCatche

<section class="latest-videoes-card">
    <h2>最新视频</h2>
    <MSlideGroup ShowArrows="true">
            @foreach (var group in _items)
            {
                <MSlideItem>
                    <div class="group">
                        @foreach (var item in group)
                        {
                            <a class="item" href="@item.Url">
                                <img class="image" src="@item.Image" alt="@item.Name" />
                                <div class="head">
                                    <div class="content">
                                        <div class="name text-truncate-2">@item.Name</div>
                                    </div>
                                    <div class="addinfo">
                                        <div class="name text-truncate-1">@item.OriginalAuthor</div>
                                        <div class="time text-truncate-1">@item.PublishTime</div>
                                    </div>
                                </div>
                            </a>
                        }

                    </div>

                </MSlideItem>
            }
            <MSlideItem>
                <a class="item more-link" href="/search/?Types=Video">
                    <MIcon Large>@IconType.SeeMore.ToIconString()</MIcon>
                    <div class="text">查看更多</div>
                </a>
            </MSlideItem>

    </MSlideGroup>
</section>

@code {

    List<IEnumerable<LatastVideoItemModel>> _items { get; set; } = new List<IEnumerable<LatastVideoItemModel>>();

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            //获取主页信息
            var items = await _pageModelCatche.GetCache("api/home/ListLatastVideoes");

            var i = 0;
            _items.Clear();
            while (i < items.Count)
            {
                _items.Add(items.Skip(i).Take(2));
                i += 2;
            }

            StateHasChanged();
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取主页最新视频列表失败");
        }
    }
}
