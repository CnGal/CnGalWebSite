@inject ToastService ToastService
@inject IHttpService _httpService
@inject IDataCacheService _dataCacheService
@inject NavigationManager NavigationManager
@inject IPageModelCatche< List < PublishedGameItemModel> > _pageModelCatche

<section class="published-games-card">
    <h2>近期新作</h2>

    <MSlideGroup ShowArrows="true">
        <ChildContent>
            @foreach (var item in _items)
            {
                <MSlideItem>
                    <a class="item" href="@item.Url">
                        <img src="@item.Image" alt="@item.Name" />
                        <div class="content">
                            <div class="name text-truncate-1">@item.Name</div>
                            <div class="brief text-truncate-2">@item.BriefIntroduction</div>
                        </div>
                    </a>
                </MSlideItem>
            }
        </ChildContent>
    </MSlideGroup>
</section>

@code {

    List<PublishedGameItemModel> _items { get; set; } = new List<PublishedGameItemModel>();

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            //获取主页信息
            _items = await _pageModelCatche.GetCache("api/home/ListPublishedGames");
            StateHasChanged();
        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取主页近期发布游戏列表失败");
        }
    }
}
