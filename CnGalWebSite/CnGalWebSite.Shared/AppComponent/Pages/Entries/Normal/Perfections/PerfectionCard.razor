@inject IHttpService _httpService
@inject ToastService? ToastService
@inject DialogService DialogService
@inject NavigationManager NavigationManager

@if (isReady)
{
    <div  @onclick="OnDetails" style="cursor:pointer;">
        <div class="a-font-color h-100" style="display:flex;align-items: center;">
            <div style="display: flex;align-items: center;">
                <div class="swal2-icon m-0 me-1 @("border-"+color)" style="height: 3em; width: 3em; display: flex;align-items: center;">
                    <div class="@("text-"+color)">@Model.Grade.ToString("0.0")</div>
                </div>
            </div>
            <div class="comment-tx-div" style="height: 3.5em;">
                <div class="new-row-warp no-margin">
                    <div class="@("comment-tag me-2 bg-"+color)">@Model.Level.GetDisplayName()</div>
                    <div class="comment-username me-2">@("超过全站 "+Model.VictoryPercentage.ToString("0.0")+"% 的词条")</div>
                </div>
                <div class="comment-time">@("有"+Model.DefectCount+"个项目待完善，总计"+Model.EditCount+"次编辑")</div>
            </div>
        </div>
    </div>
}


@code {
    [Parameter]
    public int EntryId { get; set; }

    public PerfectionInforTipViewModel Model { get; set; } = new PerfectionInforTipViewModel();

    bool isReady = false;

    string color = "success";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Model = await _httpService.GetAsync<PerfectionInforTipViewModel>("api/perfections/GetEntryPerfection/" + EntryId);
            color = ToolHelper.GetEntryPerfectionLevelColor(Model.Level);
            isReady = true;
            StateHasChanged();
        }
        catch
        {
            await ToastService.Error("获取词条完善度信息失败", "未知错误，请在确保网络正常后联系开发人员");
        }
    }

    public async Task OnDetails()
    {
        NavigationManager.NavigateTo("/entries/edit/home/" + EntryId);
    }
}
