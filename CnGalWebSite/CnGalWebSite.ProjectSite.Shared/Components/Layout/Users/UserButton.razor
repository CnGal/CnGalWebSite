@inject NavigationManager NavigationManager
@inject IHttpService _httpService
@inject IPopupService PopupService
@inject IUserService _userService
@inject ISettingService _settingService
@inject ILocalStorageService _localStorage

@implements IDisposable

@if (_settingService.IsApp)
{

    <div style="display: flex;flex-direction: column;">
        <CnGalWebSite.Components.Containers.MiniModeContainer>
            <a class="d-flex on-surface-text" href="@("user/space/"+_userService.UserInfo.Id)" style="align-items: center; flex-direction: column; ">
                <img src="@_userService.UserInfo.Avatar" alt="@_userService.UserInfo.Name" style="width:60px;border-radius:50%;" />
                <div style="display: flex; flex-direction: column; align-items: center; " class="mt-2">
                    <span class="title-large mb-1">@_userService.UserInfo.GetName()</span>
                    <MChip Small Color="primary">@_userService.UserInfo.Type.GetDisplayName()</MChip>
                 </div>
             </a>
             <MDivider Class="mt-2 mb-2" />
         </CnGalWebSite.Components.Containers.MiniModeContainer>

         <CnGalWebSite.Components.Buttons.MasaButton TextStyle Text="主页" Icon="@IconType.Home.ToIconString()" Href="/" />
         @if (Admin == false)
        {
            <MDivider Class="mt-2 mb-2" />
            <AuthorizeView Roles="Admin">
                <Authorized>
                    <CnGalWebSite.Components.Buttons.MasaButton TextStyle Text="管理员后台" Icon="mdi-car-traction-control" Href="/admin" Color="secondary" />
                 </Authorized>
             </AuthorizeView>
            <CnGalWebSite.Components.Buttons.MasaButton TextStyle Text="个人空间" Icon="mdi-star" Href="@($"/user/space/{_userService.UserInfo.Id}")" />
            <CnGalWebSite.Components.Buttons.MasaButton TextStyle Text="编辑资料" Icon="@IconType.Edit.ToIconString()" Href="@($"/user/edit/{_userService.UserInfo.Id}")" />
            <CnGalWebSite.Components.Buttons.MasaButton TextStyle Text="主题设置" Icon="@IconType.Setting.ToIconString()" OnClick="OnClickSetting" />
            <CnGalWebSite.Components.Buttons.MasaButton TextStyle Text="退出登入" Icon="@IconType.Logout.ToIconString()" OnClick="_userService.Logout" />
        }
    </div>
   
}
else
{
    @if(count!=0)
    {
        <MBadge Color="primary" Content="@count.ToString()" OffsetX="20" OffsetY="20">
            <CnGalWebSite.Components.Buttons.MasaButton Icon="@IconType.Message.ToIconString()" Class="me-2" Tooltip="消息" Href="/user/messages" />
        </MBadge>
    }
    else
    {
               <CnGalWebSite.Components.Buttons.MasaButton Icon="@IconType.Message.ToIconString()" Class="me-2" Tooltip="消息" Href="/user/messages" />     
    }

    <MMenu OffsetY CloseOnContentClick="false" @bind-Value="menu">
         <ActivatorContent Context="m">
             <MTooltip Bottom>
             <ActivatorContent Context="c">
                 @{
                        var attrs = new Dictionary<string, object>();
                        m.Attrs.ToList().ForEach(item => attrs[item.Key] = item.Value);
                        c.Attrs.ToList().ForEach(item => attrs[item.Key] = item.Value);
                    }
                    <MButton Icon Class="me-4" @attributes="@attrs">
                         <CnGalWebSite.Components.Images.MasaImage Style="width: 35px; border-radius: 50%; aspect-ratio: 1" Src="@_userService.UserInfo.Avatar" Alt="@_userService.UserInfo.Name" Type="ImageType.Avatar" />
                     </MButton>
                 </ActivatorContent>
                 <ChildContent>
                     <span>@_userService.UserInfo.GetName()</span>
                 </ChildContent>
             </MTooltip>
         </ActivatorContent>

         <ChildContent>
             <MDCard Class="pa-3" Style="width:300px;flex-direction: column; align-items: center; ">
                 <div class="d-flex" style="align-items: center; flex-direction: column; ">
                     <CnGalWebSite.Components.Images.MasaImage Src="@_userService.UserInfo.Avatar" Alt="@_userService.UserInfo.Name" Style="width:60px;border-radius:50%;" Type="ImageType.Avatar" />
                     <div style="display: flex; flex-direction: column; align-items: center; " class="mt-2">
                        <span class="title-large mb-1">@_userService.UserInfo.GetName()</span>
                         <MChip Small Color="primary">@_userService.UserInfo.Type.GetDisplayName()</MChip>
                     </div>
                 </div>
                 <MDivider Class="w-100 mt-2 mb-2"></MDivider>
                 <div class="w-100" style="display: flex;flex-direction: column;">
                     <AuthorizeView Roles="Admin">
                         <Authorized>
                             <CnGalWebSite.Components.Buttons.MasaButton TextStyle Text="管理员后台" Icon="mdi-car-traction-control" Href="/admin" Color="secondary" />
                         </Authorized>
                     </AuthorizeView>
                     <CnGalWebSite.Components.Buttons.MasaButton TextStyle Text="个人空间" Icon="mdi-star" Href="@($"/user/space/{_userService.UserInfo.Id}")" />
                     <CnGalWebSite.Components.Buttons.MasaButton TextStyle Text="编辑资料" Icon="@IconType.Edit.ToIconString()" Href="@($"/user/edit/{_userService.UserInfo.Id}")" />
                     <CnGalWebSite.Components.Buttons.MasaButton TextStyle Text="主题设置" Icon="@IconType.Setting.ToIconString()" OnClick="OnClickSetting" />
                     <CnGalWebSite.Components.Buttons.MasaButton TextStyle Text="退出登入" Icon="@IconType.Logout.ToIconString()" OnClick="_userService.Logout" />
                 </div>
             </MDCard>
         </ChildContent>
     </MMenu>

    @if (_userService.UserInfo.Type == UserType.Person)
    {
        <CnGalWebSite.Components.Buttons.MasaButton Icon="@IconType.Create.ToIconString()" Text="创作接稿" Rounded Href="/stall/edit" />
    }
    else
    {
        <CnGalWebSite.Components.Buttons.MasaButton Icon="@IconType.Create.ToIconString()" Text="企划招募" Rounded Href="/project/edit" />
    }

}

<CnGalWebSite.ProjectSite.Shared.Components.Layout.SettingDialog @ref="settingDialog" />

<EditDialog @ref="editDialog" OnEdited="OnUserInfoChanged"/>

@code {
    [Parameter]
    public bool Admin { get; set; }

    private bool menu { get; set; }

    int count;

    CnGalWebSite.ProjectSite.Shared.Components.Layout.SettingDialog settingDialog;
    EditDialog editDialog;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await RefreshUserInfor();
        _userService.UserInfoChanged -= OnUserInfoChanged;
        _userService.UserInfoChanged += OnUserInfoChanged;

    }

    public void OnUserInfoChanged()
    {
        StateHasChanged();
    }

    public async Task RefreshUserInfor()
    {
        var user = await authenticationStateTask;
        if (user.User.Identity.IsAuthenticated)
        {
            try
            {
                await _userService.Refresh();
                count = await _httpService.GetAsync<int>("api/message/GetUnReadMessageCount");
              
            }
            catch (Exception ex)
            {
                await ErrorHandler.ProcessError(ex, "获取用户信息失败");
            }
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var user = await authenticationStateTask;
            if (user.User.Identity.IsAuthenticated)
            {
                //检查是否需要完善信息
                var flag = false;
                if (_userService.UserInfo.Type == UserType.Person)
                {
                    if (string.IsNullOrWhiteSpace(_userService.UserInfo.PersonName) || string.IsNullOrWhiteSpace(_userService.UserInfo.PersonDescription))
                    {
                        flag = true;
                    }
                }
                else
                {
                    if (string.IsNullOrWhiteSpace(_userService.UserInfo.OrganizationName) || string.IsNullOrWhiteSpace(_userService.UserInfo.OrganizationName))
                    {
                        flag = true;
                    }
                }
                if (string.IsNullOrWhiteSpace(_userService.UserInfo.Contact))
                {
                    flag = true;
                }
                if (flag && !await _localStorage.GetItemAsync<bool>("ignore_user_contact"))
                {
                    editDialog?.Refresh(_userService.UserInfo.Id);
                }
            }
        }
    }

    public void OnClickSetting()
    {
        settingDialog?.Refresh();
    }

    public void Dispose()
    {
        _userService.UserInfoChanged -= OnUserInfoChanged;
        GC.SuppressFinalize(this);
    }
}
