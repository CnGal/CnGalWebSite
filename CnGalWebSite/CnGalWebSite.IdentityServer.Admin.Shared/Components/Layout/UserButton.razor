@inject NavigationManager NavigationManager


<AuthorizeView Context="userContext">
    <Authorized>
        <MButton Icon OnClick="BeginSignOut">
            <MIcon>mdi-logout</MIcon>
        </MButton>
    </Authorized>
    <NotAuthorized>
        <MButton Icon OnClick="OnLogin">
            <MIcon>mdi-login</MIcon>
        </MButton>
    </NotAuthorized>
</AuthorizeView>

@code {
    readonly List<string> items = new()
{
        "Click Me",
        "Click Me",
        "Click Me",
        "Click Me 2",
    };

    protected void OnLogin()
    {
        InteractiveRequestOptions requestOptions = new()
        {
            Interaction = InteractionType.SignIn,
            ReturnUrl = NavigationManager.Uri,
        };


        if (StaticOptions.IsSSR)
        {
            NavigationManager.NavigateTo($"Account/Login?returnUrl={NavigationManager.Uri}", true);
        }
        else
        {
            NavigationManager.NavigateToLogin("authentication/login", requestOptions);
        }
    }

    private void BeginSignOut()
    {
        @if (StaticOptions.IsSSR)
        {
            NavigationManager.NavigateTo("Account/Logout", true);
        }
        else
        {
            NavigationManager.NavigateToLogout("authentication/logout","/");
        }
    }
}
