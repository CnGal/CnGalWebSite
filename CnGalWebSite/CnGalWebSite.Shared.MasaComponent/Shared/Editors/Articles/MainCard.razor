

<CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer Icon="fa fa-fw fa-home" Title="主要信息" Class="@Class" Collapable>

    <div class="row">
        <div class="col-12 col-md-6 col-lg-4 col-xl-4 mt-2">
            <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Buttons.ImageUploadButton ShowCropper @bind-ImagePath="@Model.MainPicture" Type="ImageAspectType._16_9" Text="上传主图"/>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-4 mt-2">
            <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Buttons.ImageUploadButton @bind-ImagePath="@Model.BackgroundPicture" Type="ImageAspectType.None" Text="上传大背景图"/>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-4 mt-2">
            <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Buttons.ImageUploadButton @bind-ImagePath="@Model.SmallBackgroundPicture" Type="ImageAspectType.None" Text="上传小背景图"/>
        </div>
    </div>
    <ValidateForm Model="@Model">
        <div class="form-group mt-4">
            <div class="row">
                <div class="form-group col-12  col-sm-6">
                    <Select @bind-Value="Model.Type"></Select>
                </div>

                <CnGalWebSite.Shared.MasaComponent.Shared.Editors.Cards.DisplayNameCard @bind-Name="Model.Name" @bind-DisplayName="Model.DisplayName" Class="form-group col-12 col-sm-6" />

                <div class="form-group col-12">
                    <Textarea @bind-Value="Model.BriefIntroduction" rows="3" />
                </div>
                <div class="form-group col-12">
                    <hr />
                </div>
                <div class="form-group col-12  col-sm-6">
                    <BootstrapInput @bind-Value="Model.OriginalAuthor" />
                </div>

                <div class="form-group col-12  col-sm-6">
                    <DateTimePicker TValue="DateTime" Value="@Model.PubishTime" ValueChanged="OnPubishTimeChanged" ViewMode="DatePickerViewMode .DateTime" DisplayText="发布时间" ShowLabel="true" />
                </div>
                <div class="form-group col-12  col-sm-6">
                    <Checkbox TValue="bool" @bind-Value="Model.IsCreatedByCurrentUser" ShowAfterLabel ShowLabel="false" DisplayText="本人创作"></Checkbox>
                </div>
                <div class="form-group col-12">
                    <BootstrapInput @bind-Value="Model.OriginalLink" />
                </div>

                @if (Model.Type == ArticleType.News)
                {
                    <div class="form-group col-12">
                        <hr />
                    </div>
                    <div class="form-group col-12 col-sm-6">
                        <Switch @bind-Value="IsSame" ShowLabel="true" DisplayText="动态发生时间与发布日期一致" />
                    </div>
                    @if (IsSame)
                    {
                        <div class="form-group col-12  col-sm-6">
                            <DateTimePicker @bind-Value="@Model.PubishTime" ViewMode="DatePickerViewMode .DateTime" IsDisabled="true" DisplayText="动态发生时间" />
                        </div>
                    }
                    else
                    {
                        <div class="form-group col-12  col-sm-6">
                            <DateTimePicker @bind-Value="@Model.RealNewsTime" ViewMode="DatePickerViewMode .DateTime" />
                        </div>
                    }
                    <div class="form-group col-12  col-sm-6">
                        <BootstrapInput @bind-Value="Model.NewsType"></BootstrapInput>
                    </div>
                }
            </div>
        </div>
    </ValidateForm>
     
</CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer>

@code {
    [Parameter]
    public EditArticleMainViewModel Model { get; set; }
    [Parameter]
    public string Class { get; set; }

    private bool IsSame { get; set; }
    protected override async Task OnInitializedAsync()
    {

        IsSame = Model.PubishTime == Model.RealNewsTime;

        if (Model.RealNewsTime == null)
        {
            IsSame = true;
        }

    }

    public async Task OnPubishTimeChanged(DateTime time)
    {
        Model.PubishTime = time;

        if (IsSame&&Model.Type== ArticleType.News)
        {
            Model.RealNewsTime = time;
        }
    }
}
