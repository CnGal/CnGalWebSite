@inject ToastService ToastService

<style>
    .modal-footer {
        display: none;
    }
</style>
<div>
    <p style="font-size: initial;">
        将每个 @Title 用换行分隔，无特殊格式要求<br />
        <br />
        例如：<br />
        @Title A<br />
        @Title B<br />
        @Title C<br />
    </p>
    <Textarea @bind-Value="Text" DisplayText="@(Title+"文本")" rows="10"></Textarea>
    <div class="mt-3" style="display: flex; justify-content: space-between;">
        <Button Color="Color.Danger" Icon="fa fa-close" @onclick="@(()=>OnClickClose.InvokeAsync())" IsAsync="true" Text="放弃导入"></Button>
        <Button Color="Color.Success" Icon="fa fa-check" class="me-1" @onclick="OnImport" IsAsync="true" Text="确认导入"></Button>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<List<string>> OnAdd { get; set; }
    [Parameter]
    public EventCallback OnClickClose { get; set; }

    [Parameter]
    public string Title { get; set; }
    public string Text { get; set; }

    public async Task OnImport()
    {
        if (string.IsNullOrWhiteSpace(Text))
        {
            await ToastService.Error("批量导入失败", $"请输入{Title}文本");
        }
        await OnAdd.InvokeAsync(ToolHelper.GetTextListFromString(Text));
        await OnClickClose.InvokeAsync();
    }
}
