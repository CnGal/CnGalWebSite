@inject IHttpService _httpService


@if (isReady)
{
    @if (OnlyShowAnniversaries == false)
    {
        <CnGalWebSite.Components.Containers.MasaTitleContainer Title="日常任务" Icon="@IconType.DailyTask.ToIconString()" Collapable Outline>
            <MRow>
                <MCol Cols="12" Md="6" Lg="4" Xl="3" Class="mb-4">
                    <SignInCard Model="Model" />
                </MCol>
            </MRow>
        </CnGalWebSite.Components.Containers.MasaTitleContainer>

    }
    <AuthorizeView Roles="Admin">
        <Authorized>
            <CnGalWebSite.Components.Containers.MasaTitleContainer Title="周年庆任务" Icon="@IconType.Birthday.ToIconString()" Collapable Outline>
                <MRow>
                    <MCol Cols="12" Md="6" Lg="4" Xl="3" Class="mb-4 h-100">
                        <BookLiveCard Model="Model" />
                    </MCol>
                    <MCol Cols="12" Md="6" Lg="4" Xl="3" Class="mb-4 h-100">
                        <LotteryCard Model="Model" />
                    </MCol>
                    <MCol Cols="12" Md="6" Lg="4" Xl="3" Class="mb-4 h-100">
                        <ShareAndCommentGameCard Model="Model" />
                    </MCol>

                </MRow>
            </CnGalWebSite.Components.Containers.MasaTitleContainer>
        </Authorized>
    </AuthorizeView>


    @if (OnlyShowAnniversaries == false)
    {

        <CnGalWebSite.Components.Containers.MasaTitleContainer Title="新手任务" Icon="@IconType.NewbieTask.ToIconString()" Collapable Outline>
            <MRow>
                <MCol Cols="12" Md="6" Lg="4" Xl="3" Class="mb-4">
                    <BindSteamIdCard Model="Model" />
                </MCol>
            </MRow>
        </CnGalWebSite.Components.Containers.MasaTitleContainer>

    }
}
else
{
    <CnGalWebSite.Components.Progressings.ProgressingCard Page Fill />
}

@code {
    [Parameter]
    public bool OnlyShowAnniversaries { get; set; }


    bool isReady;

    public UserTaskModel Model { get; set; }

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            Model = await _httpService.GetAsync<UserTaskModel>("api/space/GetUserTasks");
            isReady = true;
        }
        catch (Exception ex)
        {
            await ErrorHandler.ProcessError(ex, "获取用户任务列表失败");
        }
    }
}
