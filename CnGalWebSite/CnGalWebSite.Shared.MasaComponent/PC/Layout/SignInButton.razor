
@inject IHttpService _httpService
@inject IDataCacheService _dataCacheService


@if (Model.IsSignIn)
{
    <MButton Text Class="w-100" Color="primary" Left="Left">
        <MIcon Left>mdi-clipboard-check</MIcon>
        @($"连续签到 {Model.SignInDays} 天")
    </MButton>
}
else
{
    <MButton Text Class="w-100"  OnClick="SignIn" Left="Left" Color="primary">
        <MIcon Left>mdi-clipboard-text</MIcon>
        每日签到
    </MButton>
}


@code {
    [Parameter]
    public UserInforViewModel Model { get; set; } = new UserInforViewModel();
    [Parameter]
    public bool Left { get; set; }

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }

    private async Task SignIn()
    {

        try
        {
            var result = await _httpService.GetAsync<Result>("api/space/signIn");
            if (result.Successful == true)
            {
                Model.IsSignIn = true;
                Model.SignInDays++;
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            await ErrorHandler.ProcessError(ex, "签到失败");
        }
    }
}
