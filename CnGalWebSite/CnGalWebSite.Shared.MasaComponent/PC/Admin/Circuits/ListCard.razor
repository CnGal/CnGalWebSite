@inject IHttpService _httpService
@inject IPopupService PopupService
@inject NavigationManager NavigationManager
@inject ICircuitHandlerService _circuitHandlerService

<MDCard>
    <DataTableCard TModel="CircuitHandlerModel" ShowAddButton="false" Headers="_headers" DataSource="_circuitHandlerService.GetItems()" Title="@($"{_name}列表")" SortByItem="@nameof(CircuitHandlerModel.OpenTime)" @ref="dataTableCard">
        <ItemColContent>
            @if (context.Header.Value == "actions")
            {

            }
            else if (context.Header.Value == nameof(CircuitHandlerModel.OpenTime))
            {
                @context.Item.OpenTime.ToString("yyyy-MM-dd HH:mm")
            }
            else if (context.Header.Value == nameof(CircuitHandlerModel.LastActiveTime))
            {
                @context.Item.LastActiveTime.ToString("yyyy-MM-dd HH:mm")
            }
            else if (context.Header.Value == nameof(CircuitHandlerModel.IsConnected))
            {
                <StateChip IsConnected="context.Item.IsConnected" />
            }
            else
            {
                @context.Value
            }
        </ItemColContent>
        <ButtonContent>
            <CnGalWebSite.Components.Buttons.MasaButton Rounded Text="刷新" Icon="@IconType.Refresh.ToIconString()" OnClick="Refresh" Class="me-2" />
        </ButtonContent>
    </DataTableCard>

</MDCard>

@code {
    private string _name = "线路";

    private List<DataTableHeader<CircuitHandlerModel>> _headers = new List<DataTableHeader<CircuitHandlerModel>>
{
          new ()
          {
            Text= "Id",
            Align= DataTableHeaderAlign.Start,
            Value= nameof(CircuitHandlerModel.Id)
          },
          new (){ Text= "创建时间", Value= nameof(CircuitHandlerModel.OpenTime)},
          new (){ Text= "上次活跃时间", Value= nameof(CircuitHandlerModel.LastActiveTime)},
          new (){ Text= "状态", Value= nameof(CircuitHandlerModel.IsConnected)},
          new (){ Text= "重连次数", Value= nameof(CircuitHandlerModel.ReConnectCount)},
    };

    DataTableCard<CircuitHandlerModel> dataTableCard;

    public void Refresh()
    {
        dataTableCard?.GetDataFromApi();
    }
}
