@inject IHttpService _httpService
@inject IPageModelCatche<List<ArticleInforTipViewModel>> _pageModelCatche
@inject NavigationManager NavigationManager
@inject IDataCacheService _dataCacheService

<CnGalWebSite.Components.Containers.MiniModeContainer>
    <section class="weekly-news-card">
        <h2>每周速报</h2>
        <div class="group">
            @foreach (var item in _items.Take(_dataCacheService.IsApp ? 3 : 5))
            {
                <MDCard Class="item" Href="@($"articles/index/{item.Id}")">
                    @if (GetIcon(item) != null)
                    {
                        <MIcon Color="@GetIconColor(item)">@GetIcon(item)</MIcon>
                    }

                    <div class="content">
                        <div class="name text-truncate-1 @(GetIcon(item) != null?"active":"")">@item.Name.MidStrEx("CnGal每周速报（", "）")</div>
                    </div>
                </MDCard>
            }
        </div>
    </section>
</CnGalWebSite.Components.Containers.MiniModeContainer>


@code {

    List<ArticleInforTipViewModel> _items { get; set; } = new List<ArticleInforTipViewModel>();

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            _items = await _pageModelCatche.GetCache("api/news/GetWeeklyNewsOverview");
            StateHasChanged();
        }
        catch (Exception ex)
        {
            await ErrorHandler.ProcessError(ex, "获取主页周报列表失败");
        }
    }

    public string GetIcon(ArticleInforTipViewModel model)
    {
        if (model == _items.OrderByDescending(s => s.LastEditTime).FirstOrDefault())
        {
            return IconType.New.ToIconString();
        }

        return null;
    }

    public string GetIconColor(ArticleInforTipViewModel model)
    {
        if (model == _items.OrderByDescending(s => s.LastEditTime).FirstOrDefault())
        {
            return "success";
        }

        return null;
    }
}
