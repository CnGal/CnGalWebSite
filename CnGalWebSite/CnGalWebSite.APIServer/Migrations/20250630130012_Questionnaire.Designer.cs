// <auto-generated />
using System;
using CnGalWebSite.APIServer.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CnGalWebSite.APIServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250630130012_Questionnaire")]
    partial class Questionnaire
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ArticleEntry", b =>
                {
                    b.Property<long>("ArticlesId")
                        .HasColumnType("bigint");

                    b.Property<int>("EntriesId")
                        .HasColumnType("int");

                    b.HasKey("ArticlesId", "EntriesId");

                    b.HasIndex("EntriesId");

                    b.ToTable("ArticleEntry");
                });

            modelBuilder.Entity("ArticleVideo", b =>
                {
                    b.Property<long>("ArticlesId")
                        .HasColumnType("bigint");

                    b.Property<long>("VideosId")
                        .HasColumnType("bigint");

                    b.HasKey("ArticlesId", "VideosId");

                    b.HasIndex("VideosId");

                    b.ToTable("ArticleVideo");
                });

            modelBuilder.Entity("ArticleVote", b =>
                {
                    b.Property<long>("ArticlesId")
                        .HasColumnType("bigint");

                    b.Property<long>("VotesId")
                        .HasColumnType("bigint");

                    b.HasKey("ArticlesId", "VotesId");

                    b.HasIndex("VotesId");

                    b.ToTable("ArticleVote");
                });

            modelBuilder.Entity("CnGalWebSite.APIServer.Model.SearchCache", b =>
                {
                    b.Property<long>("SearchCacheId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("SearchCacheId"));

                    b.Property<string>("AnotherName")
                        .HasColumnType("longtext");

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("Id")
                        .HasColumnType("longtext");

                    b.Property<long>("LastEditTime")
                        .HasColumnType("bigint");

                    b.Property<string>("MainPage")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<long>("OriginalId")
                        .HasColumnType("bigint");

                    b.Property<int>("OriginalType")
                        .HasColumnType("int");

                    b.Property<long>("PubulishTime")
                        .HasColumnType("bigint");

                    b.Property<int>("ReaderCount")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("SearchCacheId");

                    b.ToTable("SearchCaches");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Almanac", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Almanacs");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.AlmanacArticle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AlmanacId")
                        .HasColumnType("bigint");

                    b.Property<long>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Hide")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlmanacId");

                    b.HasIndex("ArticleId");

                    b.ToTable("AlmanacArticles");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.AlmanacEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AlmanacId")
                        .HasColumnType("bigint");

                    b.Property<int>("EntryId")
                        .HasColumnType("int");

                    b.Property<bool>("Hide")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlmanacId");

                    b.HasIndex("EntryId");

                    b.ToTable("AlmanacEntries");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("BackgroundImage")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("CanComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<int>("ContributionValue")
                        .HasColumnType("int");

                    b.Property<int>("DisplayContributionValue")
                        .HasColumnType("int");

                    b.Property<int>("DisplayIntegral")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("GCoins")
                        .HasColumnType("int");

                    b.Property<long>("GroupQQ")
                        .HasColumnType("bigint");

                    b.Property<int>("Integral")
                        .HasColumnType("int");

                    b.Property<bool>("IsPassedVerification")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsShowFavotites")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsShowGameRecord")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastChangePasswordTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastOnlineTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastUpdateSteamInfoTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MBgImage")
                        .HasColumnType("longtext");

                    b.Property<string>("MainPageContext")
                        .HasMaxLength(20000000)
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<long>("OnlineTime")
                        .HasColumnType("bigint");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalSignature")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegistTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SBgImage")
                        .HasColumnType("longtext");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("SteamId")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UnsealTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "a18be9c0-aa65-4af8-bd17-00bd9344e575",
                            AccessFailedCount = 0,
                            CanComment = true,
                            ConcurrencyStamp = "bea7e82e-e396-4144-b0b3-b06890b1c017",
                            ContributionValue = 0,
                            DisplayContributionValue = 0,
                            DisplayIntegral = 0,
                            Email = "123456789@qq.com",
                            EmailConfirmed = true,
                            GCoins = 0,
                            GroupQQ = 0L,
                            Integral = 0,
                            IsPassedVerification = false,
                            IsShowFavotites = false,
                            IsShowGameRecord = false,
                            LastOnlineTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdateSteamInfoTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            MainPageContext = "### 这个人太懒了，什么也没写额(～￣▽￣)～",
                            NormalizedEmail = "123456789@qq.com",
                            NormalizedUserName = "ADMIN",
                            OnlineTime = 0L,
                            PasswordHash = "AQAAAAEAACcQAAAAEDecloBliZOnB0dNPQmr8qhoodaLmPdrKN10/bvLDrHaAJSxqWOnrEsvBhl5kzrZmQ==",
                            PersonalSignature = "这个人太懒了，什么也没写额(～￣▽￣)～",
                            PhoneNumberConfirmed = false,
                            RegistTime = new DateTime(2025, 6, 30, 21, 0, 9, 964, DateTimeKind.Utc).AddTicks(9854),
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ApplicationUserCommodity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("CommodityId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CommodityId");

                    b.ToTable("ApplicationUserCommodities");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Article", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BackUpArchiveId")
                        .HasColumnType("bigint");

                    b.Property<string>("BackgroundPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<bool?>("CanComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("DisambigId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsCreatedByCurrentUser")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastEditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MainPage")
                        .HasMaxLength(10000000)
                        .HasColumnType("longtext");

                    b.Property<string>("MainPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NewsType")
                        .HasColumnType("longtext");

                    b.Property<string>("OriginalAuthor")
                        .HasColumnType("longtext");

                    b.Property<string>("OriginalLink")
                        .HasColumnType("longtext");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime>("PubishTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ReaderCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RealNewsTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SmallBackgroundPicture")
                        .HasColumnType("longtext");

                    b.Property<int>("ThumbsUpCount")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("DisambigId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ArticleRelation", b =>
                {
                    b.Property<long>("ArticleRelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ArticleRelationId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("ArticleRelationId"));

                    b.Property<long?>("FromArticle")
                        .HasColumnType("bigint");

                    b.Property<long?>("ToArticle")
                        .HasColumnType("bigint");

                    b.HasKey("ArticleRelationId");

                    b.HasIndex("FromArticle");

                    b.HasIndex("ToArticle");

                    b.ToTable("ArticleRelations");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ArticleRelevance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("DisplayValue")
                        .HasColumnType("longtext");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleRelevance");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.BackUpArchive", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsLastFail")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastBackUpTime")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("LastTimeUsed")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId")
                        .IsUnique();

                    b.HasIndex("EntryId")
                        .IsUnique();

                    b.ToTable("BackUpArchives");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.BackUpArchiveDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BackUpArchiveId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("BackUpTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsFail")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("TimeUsed")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("BackUpArchiveId");

                    b.ToTable("BackUpArchiveDetails");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.BasicEntryInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("DisplayValue")
                        .HasColumnType("longtext");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.ToTable("BasicEntryInformation");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.BasicEntryInformationAdditional", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BasicEntryInformationId")
                        .HasColumnType("bigint");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("DisplayValue")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BasicEntryInformationId");

                    b.ToTable("BasicEntryInformationAdditional");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Booking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("BookingCount")
                        .HasColumnType("int");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsNeedNotification")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LotteryId")
                        .HasColumnType("int");

                    b.Property<bool>("Open")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EntryId")
                        .IsUnique();

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.BookingGoal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BookingId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("BookingGoal");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.BookingUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("BookingId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("BookingTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsNotified")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("BookingId");

                    b.ToTable("BookingUsers");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Carousel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carousels");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CommentTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("LotteryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentCodeNavigationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PeripheryId")
                        .HasColumnType("bigint");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasMaxLength(10000000)
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<long?>("UserSpaceCommentManagerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("VideoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("VoteId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("EntryId");

                    b.HasIndex("LotteryId");

                    b.HasIndex("ParentCodeNavigationId");

                    b.HasIndex("PeripheryId");

                    b.HasIndex("UserSpaceCommentManagerId");

                    b.HasIndex("VideoId");

                    b.HasIndex("VoteId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Commodity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastEditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Commodities");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.CommodityCode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("CanRedeemed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Hide")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Redeemed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("RedeemedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("CommodityCodes");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Disambig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MainPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SmallBackgroundPicture")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Disambigs");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnotherName")
                        .HasColumnType("longtext");

                    b.Property<long?>("BackUpArchiveId")
                        .HasColumnType("bigint");

                    b.Property<string>("BackgroundPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<bool?>("CanComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<int?>("DisambigId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHideOutlink")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastEditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MainPage")
                        .HasMaxLength(1000000)
                        .HasColumnType("longtext");

                    b.Property<string>("MainPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("PerfectionId")
                        .HasColumnType("int");

                    b.Property<int>("PlayedCount")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PubulishTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ReaderCount")
                        .HasColumnType("int");

                    b.Property<string>("SmallBackgroundPicture")
                        .HasColumnType("longtext");

                    b.Property<int>("Template")
                        .HasColumnType("int");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisambigId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryAudio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time(6)");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.ToTable("EntryAudio");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryInformationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Types")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("EntryInformationTypes");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryPicture", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<long?>("PeripheryId")
                        .HasColumnType("bigint");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.Property<long?>("VideoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.HasIndex("PeripheryId");

                    b.HasIndex("VideoId");

                    b.ToTable("EntryPicture");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryRelation", b =>
                {
                    b.Property<long>("EntryRelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("EntryRelationId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("EntryRelationId"));

                    b.Property<int?>("FromEntry")
                        .HasColumnType("int");

                    b.Property<int?>("ToEntry")
                        .HasColumnType("int");

                    b.HasKey("EntryRelationId");

                    b.HasIndex("FromEntry");

                    b.HasIndex("ToEntry");

                    b.ToTable("EntryRelations");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryRelevance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("DisplayValue")
                        .HasColumnType("longtext");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.ToTable("EntryRelevance");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryStaff", b =>
                {
                    b.Property<long>("EntryStaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("EntryStaffId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("EntryStaffId"));

                    b.Property<string>("CustomName")
                        .HasColumnType("longtext");

                    b.Property<int?>("FromEntry")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("PositionGeneral")
                        .HasColumnType("int");

                    b.Property<string>("PositionOfficial")
                        .HasColumnType("longtext");

                    b.Property<string>("SubordinateOrganization")
                        .HasColumnType("longtext");

                    b.Property<int?>("ToEntry")
                        .HasColumnType("int");

                    b.HasKey("EntryStaffId");

                    b.HasIndex("FromEntry");

                    b.HasIndex("ToEntry");

                    b.ToTable("EntryStaffs");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryWebsite", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<string>("FirstPage")
                        .HasColumnType("longtext");

                    b.Property<string>("Html")
                        .HasColumnType("longtext");

                    b.Property<string>("Impressions")
                        .HasColumnType("longtext");

                    b.Property<string>("Introduction")
                        .HasColumnType("longtext");

                    b.Property<string>("Logo")
                        .HasColumnType("longtext");

                    b.Property<string>("SubTitle")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EntryId")
                        .IsUnique();

                    b.ToTable("EntryWebsites");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryWebsiteImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("EntryWebsiteId")
                        .HasColumnType("bigint");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EntryWebsiteId");

                    b.ToTable("EntryWebsiteImage");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ErrorCount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ErrorCounts");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Examine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("ApplyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CommentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext");

                    b.Property<string>("Context")
                        .HasMaxLength(4000000)
                        .HasColumnType("longtext");

                    b.Property<int>("ContributionValue")
                        .HasColumnType("int");

                    b.Property<int?>("DisambigId")
                        .HasColumnType("int");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<long?>("FavoriteFolderId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsPassed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<int>("Operation")
                        .HasColumnType("int");

                    b.Property<string>("PassedAdminName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("PassedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("PeripheryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PlayedGameId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PrepositionExamineId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TagId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<long?>("VideoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("CommentId");

                    b.HasIndex("DisambigId");

                    b.HasIndex("EntryId");

                    b.HasIndex("FavoriteFolderId");

                    b.HasIndex("PeripheryId");

                    b.HasIndex("PlayedGameId");

                    b.HasIndex("TagId");

                    b.HasIndex("VideoId");

                    b.ToTable("Examines");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ExpoAward", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ExpoAwards");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ExpoGame", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("Hidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("ExpoGames");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ExpoPrize", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("AwardId")
                        .HasColumnType("bigint");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DrawTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("AwardId");

                    b.ToTable("ExpoPrizes");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ExpoTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Hidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExpoTags");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ExpoTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("LotteryCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("ExpoTasks");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.FavoriteFolder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastEditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MainImage")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("ReaderCount")
                        .HasColumnType("int");

                    b.Property<bool>("ShowPublicly")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("FavoriteFolders");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.FavoriteObject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<long>("FavoriteFolderId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PeripheryId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TagId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<long?>("VideoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("EntryId");

                    b.HasIndex("FavoriteFolderId");

                    b.HasIndex("PeripheryId");

                    b.HasIndex("TagId");

                    b.HasIndex("VideoId");

                    b.ToTable("FavoriteObjects");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.FriendLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FriendLinks");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.GameNews", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<string>("Author")
                        .HasColumnType("longtext");

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsOriginal")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<string>("MainPage")
                        .HasMaxLength(10000000)
                        .HasColumnType("longtext");

                    b.Property<string>("MainPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("NewsType")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PublishTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("RSSId")
                        .HasColumnType("bigint");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<long?>("WeeklyNewsId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("RSSId");

                    b.HasIndex("WeeklyNewsId");

                    b.ToTable("GameNewses");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.GameNewsRelatedEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("EntryName")
                        .HasColumnType("longtext");

                    b.Property<long?>("GameNewsId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GameNewsId");

                    b.ToTable("GameNewsRelatedEntry");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.GameRelease", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Engine")
                        .HasColumnType("longtext");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<string>("GamePlatformTypes")
                        .HasColumnType("longtext");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PublishPlatformName")
                        .HasColumnType("longtext");

                    b.Property<int>("PublishPlatformType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TimeNote")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.ToTable("GameRelease");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.HistoryUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("LoginName")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("longtext");

                    b.Property<string>("UserIdentity")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("HistoryUsers");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Loginkey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsOneTime")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Key")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Loginkeys");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Lottery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BackgroundPicture")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BeginTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<bool?>("CanComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<int>("ConditionType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("GameSteamId")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsEnd")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastEditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LotteryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MainPage")
                        .HasMaxLength(10000000)
                        .HasColumnType("longtext");

                    b.Property<string>("MainPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("ReaderCount")
                        .HasColumnType("int");

                    b.Property<string>("SmallBackgroundPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Lotteries");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.LotteryAward", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<int>("Integral")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<long?>("LotteryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Sponsor")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LotteryId");

                    b.ToTable("LotteryAwards");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.LotteryPrize", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Context")
                        .HasColumnType("longtext");

                    b.Property<long?>("LotteryAwardId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LotteryUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LotteryAwardId");

                    b.HasIndex("LotteryUserId")
                        .IsUnique();

                    b.ToTable("LotteryPrizes");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.LotteryUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("LotteryAwardId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LotteryId")
                        .HasColumnType("bigint");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<DateTime>("ParticipationTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("LotteryAwardId");

                    b.HasIndex("LotteryId");

                    b.ToTable("LotteryUsers");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AdditionalInfor")
                        .HasColumnType("longtext");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsReaded")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<string>("LinkTitle")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PostTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Rank")
                        .HasColumnType("longtext");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.OperationRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cookie")
                        .HasColumnType("longtext");

                    b.Property<string>("Ip")
                        .HasColumnType("longtext");

                    b.Property<string>("ObjectId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("OperationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("OperationRecords");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.OriginalRSS", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PublishTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OriginalRSS");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Outlink", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<long?>("VideoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("EntryId");

                    b.HasIndex("VideoId");

                    b.ToTable("Outlink");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Perfection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("EntryId")
                        .HasColumnType("int");

                    b.Property<double>("Grade")
                        .HasColumnType("double");

                    b.Property<double>("VictoryPercentage")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("EntryId")
                        .IsUnique();

                    b.ToTable("Perfections");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.PerfectionCheck", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CheckType")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("DefectType")
                        .HasColumnType("int");

                    b.Property<double>("Grade")
                        .HasColumnType("double");

                    b.Property<string>("Infor")
                        .HasColumnType("longtext");

                    b.Property<long?>("PerfectionId")
                        .HasColumnType("bigint");

                    b.Property<double>("VictoryPercentage")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("PerfectionId");

                    b.ToTable("PerfectionChecks");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.PerfectionOverview", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("AverageValue")
                        .HasColumnType("double");

                    b.Property<int>("ExcellentCount")
                        .HasColumnType("int");

                    b.Property<int>("GoodCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Median")
                        .HasColumnType("double");

                    b.Property<int>("Mode")
                        .HasColumnType("int");

                    b.Property<double>("StandardDeviation")
                        .HasColumnType("double");

                    b.Property<int>("ToBeImprovedCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PerfectionOverviews");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Periphery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("longtext");

                    b.Property<string>("BackgroundPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("Brand")
                        .HasColumnType("longtext");

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<bool?>("CanComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Category")
                        .HasColumnType("longtext");

                    b.Property<int>("CollectedCount")
                        .HasColumnType("int");

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("IndividualParts")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAvailableItem")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsReprint")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastEditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MainPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("Material")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<string>("Price")
                        .HasColumnType("longtext");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("ReaderCount")
                        .HasColumnType("int");

                    b.Property<string>("SaleLink")
                        .HasColumnType("longtext");

                    b.Property<string>("Size")
                        .HasColumnType("longtext");

                    b.Property<string>("SmallBackgroundPicture")
                        .HasColumnType("longtext");

                    b.Property<int>("SongCount")
                        .HasColumnType("int");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Peripheries");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.PeripheryRelation", b =>
                {
                    b.Property<long>("PeripheryRelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("PeripheryRelationId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("PeripheryRelationId"));

                    b.Property<long?>("FromPeriphery")
                        .HasColumnType("bigint");

                    b.Property<long?>("ToPeriphery")
                        .HasColumnType("bigint");

                    b.HasKey("PeripheryRelationId");

                    b.HasIndex("FromPeriphery");

                    b.HasIndex("ToPeriphery");

                    b.ToTable("PeripheryRelations");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.PeripheryRelevanceEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<long?>("PeripheryId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.HasIndex("PeripheryId");

                    b.ToTable("PeripheryRelevanceEntries");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.PeripheryRelevanceUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("PeripheryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartOwnedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("PeripheryId");

                    b.ToTable("PeripheryRelevanceUsers");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.PlayedGame", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CVSocre")
                        .HasColumnType("int");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsInSteam")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastEditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MusicSocre")
                        .HasColumnType("int");

                    b.Property<int>("PaintSocre")
                        .HasColumnType("int");

                    b.Property<long>("PlayDuration")
                        .HasColumnType("bigint");

                    b.Property<string>("PlayImpressions")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ScoreTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ScriptSocre")
                        .HasColumnType("int");

                    b.Property<bool>("ShowPublicly")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ShowSocre")
                        .HasColumnType("int");

                    b.Property<int>("SystemSocre")
                        .HasColumnType("int");

                    b.Property<int>("TotalSocre")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("EntryId");

                    b.ToTable("PlayedGames");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.QuestionDisplayCondition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("ConditionGroup")
                        .HasColumnType("int");

                    b.Property<int>("ConditionType")
                        .HasColumnType("int");

                    b.Property<long>("ControlledQuestionId")
                        .HasColumnType("bigint");

                    b.Property<string>("ExpectedValue")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("LogicalOperator")
                        .HasColumnType("int");

                    b.Property<long?>("TriggerOptionId")
                        .HasColumnType("bigint");

                    b.Property<long>("TriggerQuestionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ControlledQuestionId");

                    b.HasIndex("TriggerOptionId");

                    b.HasIndex("TriggerQuestionId");

                    b.ToTable("QuestionDisplayConditions");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.QuestionOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId", "SortOrder");

                    b.ToTable("QuestionOptions");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.QuestionResponse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("NumericAnswer")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<long>("QuestionnaireResponseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ResponseTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SelectedOptionIds")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("SortedOptionIds")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("TextAnswer")
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuestionnaireResponseId", "QuestionId")
                        .IsUnique();

                    b.ToTable("QuestionResponses");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Questionnaire", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("AllowMultipleSubmissions")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("BeginTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastEditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MainPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<bool>("RequireLogin")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ResponseCount")
                        .HasColumnType("int");

                    b.Property<string>("ThankYouMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Questionnaires");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.QuestionnaireQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MaxSelectionCount")
                        .HasColumnType("int");

                    b.Property<int?>("MaxTextLength")
                        .HasColumnType("int");

                    b.Property<int?>("MinSelectionCount")
                        .HasColumnType("int");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.Property<long>("QuestionnaireId")
                        .HasColumnType("bigint");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("TextPlaceholder")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionnaireId", "SortOrder");

                    b.ToTable("QuestionnaireQuestions");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.QuestionnaireResponse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("CompletionTimeSeconds")
                        .HasColumnType("int");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("QuestionnaireId")
                        .HasColumnType("bigint");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("SubmitTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("QuestionnaireId", "ApplicationUserId")
                        .HasDatabaseName("IX_QuestionnaireResponse_Questionnaire_User");

                    b.HasIndex("QuestionnaireId", "ApplicationUserId", "SubmitTime");

                    b.ToTable("QuestionnaireResponses");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Rank", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CSS")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastEditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Styles")
                        .HasColumnType("longtext");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.RankUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("RankId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("RankId");

                    b.ToTable("RankUsers");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Recommend", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("EntryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Reason")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EntryId")
                        .IsUnique();

                    b.ToTable("Recommends");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.RobotEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("DelaySecond")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<double>("Probability")
                        .HasColumnType("double");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RobotEvents");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.RobotFace", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Key")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RobotFaces");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.RobotGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("ForceMatch")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RobotGroups");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.RobotReply", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("AfterTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("BeforeTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Key")
                        .HasColumnType("longtext");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Range")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RobotReplies");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.RoleBirthday", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.ToTable("RoleBirthdays");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.SendCount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("IP")
                        .HasColumnType("longtext");

                    b.Property<string>("Mail")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SendCounts");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.SignInDay", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("SignInDay");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.SteamAppRreview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("appid")
                        .HasColumnType("bigint");

                    b.Property<long?>("comment_count")
                        .HasColumnType("bigint");

                    b.Property<string>("developer_response")
                        .HasMaxLength(10000000)
                        .HasColumnType("longtext");

                    b.Property<bool?>("hidden_in_steam_china")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("language")
                        .HasColumnType("longtext");

                    b.Property<long?>("last_played")
                        .HasColumnType("bigint");

                    b.Property<long?>("num_games_owned")
                        .HasColumnType("bigint");

                    b.Property<long?>("num_reviews")
                        .HasColumnType("bigint");

                    b.Property<long?>("playtime_at_review")
                        .HasColumnType("bigint");

                    b.Property<long?>("playtime_forever")
                        .HasColumnType("bigint");

                    b.Property<long?>("playtime_last_two_weeks")
                        .HasColumnType("bigint");

                    b.Property<bool?>("received_for_free")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("recommendationid")
                        .HasColumnType("int");

                    b.Property<string>("review")
                        .HasMaxLength(10000000)
                        .HasColumnType("longtext");

                    b.Property<string>("steam_china_location")
                        .HasColumnType("longtext");

                    b.Property<bool?>("steam_purchase")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("steamid")
                        .HasColumnType("longtext");

                    b.Property<long?>("timestamp_created")
                        .HasColumnType("bigint");

                    b.Property<long?>("timestamp_dev_responded")
                        .HasColumnType("bigint");

                    b.Property<long?>("timestamp_updated")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("voted_up")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("votes_funny")
                        .HasColumnType("bigint");

                    b.Property<long?>("votes_up")
                        .HasColumnType("bigint");

                    b.Property<string>("weighted_vote_score")
                        .HasColumnType("longtext");

                    b.Property<bool?>("written_during_early_access")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("recommendationid")
                        .IsUnique();

                    b.ToTable("SteamAppRreviews");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.SteamInfor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CutLowest")
                        .HasColumnType("int");

                    b.Property<int>("CutNow")
                        .HasColumnType("int");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<int>("EstimationOwnersMax")
                        .HasColumnType("int");

                    b.Property<int>("EstimationOwnersMin")
                        .HasColumnType("int");

                    b.Property<int>("EvaluationCount")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LowestTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("OriginalPrice")
                        .HasColumnType("int");

                    b.Property<double>("PlayTime")
                        .HasColumnType("double");

                    b.Property<int>("PriceLowest")
                        .HasColumnType("int");

                    b.Property<string>("PriceLowestString")
                        .HasColumnType("longtext");

                    b.Property<int>("PriceNow")
                        .HasColumnType("int");

                    b.Property<string>("PriceNowString")
                        .HasColumnType("longtext");

                    b.Property<int>("RecommendationRate")
                        .HasColumnType("int");

                    b.Property<int>("SteamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.HasIndex("SteamId")
                        .IsUnique();

                    b.ToTable("SteamInfors");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.SteamUserInfor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("SteamId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SteamUserInfors");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.StoreInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CurrencyCode")
                        .HasColumnType("int");

                    b.Property<double?>("CutLowest")
                        .HasColumnType("double");

                    b.Property<double?>("CutNow")
                        .HasColumnType("double");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<int?>("EstimationOwnersMax")
                        .HasColumnType("int");

                    b.Property<int?>("EstimationOwnersMin")
                        .HasColumnType("int");

                    b.Property<int?>("EvaluationCount")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<double?>("OriginalPrice")
                        .HasColumnType("double");

                    b.Property<string>("PlatformName")
                        .HasColumnType("longtext");

                    b.Property<int>("PlatformType")
                        .HasColumnType("int");

                    b.Property<int?>("PlayTime")
                        .HasColumnType("int");

                    b.Property<double?>("PriceLowest")
                        .HasColumnType("double");

                    b.Property<double?>("PriceNow")
                        .HasColumnType("double");

                    b.Property<double?>("RecommendationRate")
                        .HasColumnType("double");

                    b.Property<int?>("Revenue")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdateType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.ToTable("StoreInfo");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastEditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MainPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ParentCodeNavigationId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("ReaderCount")
                        .HasColumnType("int");

                    b.Property<string>("SmallBackgroundPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentCodeNavigationId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsHidden = false,
                            LastEditTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "游戏",
                            Priority = 0,
                            ReaderCount = 0
                        },
                        new
                        {
                            Id = 2,
                            IsHidden = false,
                            LastEditTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "角色",
                            Priority = 0,
                            ReaderCount = 0
                        },
                        new
                        {
                            Id = 3,
                            IsHidden = false,
                            LastEditTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "STAFF",
                            Priority = 0,
                            ReaderCount = 0
                        },
                        new
                        {
                            Id = 4,
                            IsHidden = false,
                            LastEditTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "制作组",
                            Priority = 0,
                            ReaderCount = 0
                        });
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ThirdPartyLoginInfor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UniqueId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("ThirdPartyLoginInfors");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ThumbsUp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ThumbsUpTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ArticleId");

                    b.ToTable("ThumbsUps");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.TimedTask_Deleted", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EveryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ExecuteType")
                        .HasColumnType("int");

                    b.Property<long>("IntervalTime")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsLastFail")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPause")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRuning")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastExecutedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Parameter")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TimedTasks");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.UserAddress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("RealName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("UserAddresses");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.UserCertification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CertificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.HasIndex("EntryId")
                        .IsUnique();

                    b.ToTable("UserCertifications");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.UserIntegral", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<int>("SourceType")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("UserIntegrals");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.UserMonitor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("EntryId");

                    b.ToTable("UserMonitors");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.UserOnlineInfor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("UserOnlineInfors");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.UserReviewEditRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("ExamineId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ReviewedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ExamineId");

                    b.ToTable("UserReviewEditRecords");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.UserSpaceCommentManager", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("UserSpaceCommentManagers");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Video", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BackgroundPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<bool>("CanComment")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<int>("Copyright")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time(6)");

                    b.Property<bool>("IsCreatedByCurrentUser")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsInteractive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastEditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MainPage")
                        .HasMaxLength(10000000)
                        .HasColumnType("longtext");

                    b.Property<string>("MainPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OriginalAuthor")
                        .HasColumnType("longtext");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime>("PubishTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ReaderCount")
                        .HasColumnType("int");

                    b.Property<string>("SmallBackgroundPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.VideoRelation", b =>
                {
                    b.Property<long>("VideoRelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("VideoRelationId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("VideoRelationId"));

                    b.Property<long?>("FromVideo")
                        .HasColumnType("bigint");

                    b.Property<long?>("ToVideo")
                        .HasColumnType("bigint");

                    b.HasKey("VideoRelationId");

                    b.HasIndex("FromVideo");

                    b.HasIndex("ToVideo");

                    b.ToTable("VideoRelation");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Vote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BackgroundPicture")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BeginTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<bool?>("CanComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsAllowModification")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastEditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MainPage")
                        .HasMaxLength(10000000)
                        .HasColumnType("longtext");

                    b.Property<string>("MainPicture")
                        .HasColumnType("longtext");

                    b.Property<long>("MaximumSelectionCount")
                        .HasColumnType("bigint");

                    b.Property<long>("MinimumSelectionCount")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("ReaderCount")
                        .HasColumnType("int");

                    b.Property<string>("SmallBackgroundPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.VoteOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<long?>("PeripheryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<long?>("VoteId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("EntryId");

                    b.HasIndex("PeripheryId");

                    b.HasIndex("VoteId");

                    b.ToTable("VoteOptions");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.VoteUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("VoteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("VotedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("VoteId");

                    b.ToTable("VoteUsers");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.WeeklyNews", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<string>("BriefIntroduction")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MainPage")
                        .HasMaxLength(10000000)
                        .HasColumnType("longtext");

                    b.Property<string>("MainPicture")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PublishTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("WeeklyNewses");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.WeiboUserInfor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("EntryId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<long>("WeiboId")
                        .HasColumnType("bigint");

                    b.Property<string>("WeiboName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.ToTable("WeiboUserInfors");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Models.FileManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("TotalSize")
                        .HasColumnType("bigint");

                    b.Property<long>("UsedSize")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("FileManagers");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Models.TokenCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Num")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TokenCustoms");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Models.UserFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("time(6)");

                    b.Property<int?>("FileManagerId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("Sha1")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FileManagerId");

                    b.ToTable("UserFiles");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.ViewModel.Tables.BasicInforTableModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Engine")
                        .HasColumnType("longtext");

                    b.Property<string>("GameNickname")
                        .HasColumnType("longtext");

                    b.Property<string>("GamePlatforms")
                        .HasColumnType("longtext");

                    b.Property<string>("IssueMethod")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("IssueTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("OfficialWebsite")
                        .HasColumnType("longtext");

                    b.Property<string>("Original")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductionGroup")
                        .HasColumnType("longtext");

                    b.Property<string>("Publisher")
                        .HasColumnType("longtext");

                    b.Property<string>("QQgroupGame")
                        .HasColumnType("longtext");

                    b.Property<long>("RealId")
                        .HasColumnType("bigint");

                    b.Property<string>("SteamId")
                        .HasColumnType("longtext");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("BasicInforTableModels");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.ViewModel.Tables.GameScoreTableModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("AllCVSocre")
                        .HasColumnType("double");

                    b.Property<double>("AllMusicSocre")
                        .HasColumnType("double");

                    b.Property<double>("AllPaintSocre")
                        .HasColumnType("double");

                    b.Property<double>("AllScriptSocre")
                        .HasColumnType("double");

                    b.Property<double>("AllShowSocre")
                        .HasColumnType("double");

                    b.Property<double>("AllSystemSocre")
                        .HasColumnType("double");

                    b.Property<double>("AllTotalSocre")
                        .HasColumnType("double");

                    b.Property<double>("FilterCVSocre")
                        .HasColumnType("double");

                    b.Property<double>("FilterMusicSocre")
                        .HasColumnType("double");

                    b.Property<double>("FilterPaintSocre")
                        .HasColumnType("double");

                    b.Property<double>("FilterScriptSocre")
                        .HasColumnType("double");

                    b.Property<double>("FilterShowSocre")
                        .HasColumnType("double");

                    b.Property<double>("FilterSystemSocre")
                        .HasColumnType("double");

                    b.Property<double>("FilterTotalSocre")
                        .HasColumnType("double");

                    b.Property<long>("GameId")
                        .HasColumnType("bigint");

                    b.Property<string>("GameName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("GameScores");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.ViewModel.Tables.GroupInforTableModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AnotherNameGroup")
                        .HasColumnType("longtext");

                    b.Property<string>("Bilibili")
                        .HasColumnType("longtext");

                    b.Property<string>("MicroBlog")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("QQgroupGroup")
                        .HasColumnType("longtext");

                    b.Property<long>("RealId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("GroupInforTableModels");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.ViewModel.Tables.MakerInforTableModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AnotherName")
                        .HasColumnType("longtext");

                    b.Property<string>("Bilibili")
                        .HasColumnType("longtext");

                    b.Property<string>("Blog")
                        .HasColumnType("longtext");

                    b.Property<string>("Lofter")
                        .HasColumnType("longtext");

                    b.Property<string>("MicroBlog")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Nickname")
                        .HasColumnType("longtext");

                    b.Property<string>("Other")
                        .HasColumnType("longtext");

                    b.Property<long>("RealId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("MakerInforTableModels");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.ViewModel.Tables.RoleInforTableModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AnotherNameRole")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("BloodType")
                        .HasColumnType("longtext");

                    b.Property<string>("CV")
                        .HasColumnType("longtext");

                    b.Property<string>("Character")
                        .HasColumnType("longtext");

                    b.Property<string>("ClothesAccessories")
                        .HasColumnType("longtext");

                    b.Property<string>("FigureData")
                        .HasColumnType("longtext");

                    b.Property<string>("FigureSubjective")
                        .HasColumnType("longtext");

                    b.Property<string>("GameName")
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Haircolor")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Pupilcolor")
                        .HasColumnType("longtext");

                    b.Property<long>("RealId")
                        .HasColumnType("bigint");

                    b.Property<string>("RoleAge")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleHeight")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleIdentity")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleTaste")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RoleInforTableModels");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.ViewModel.Tables.StaffInforTableModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("GameName")
                        .HasColumnType("longtext");

                    b.Property<string>("NicknameOfficial")
                        .HasColumnType("longtext");

                    b.Property<int>("PositionGeneral")
                        .HasColumnType("int");

                    b.Property<string>("PositionOfficial")
                        .HasColumnType("longtext");

                    b.Property<long>("RealId")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<string>("Subcategory")
                        .HasColumnType("longtext");

                    b.Property<string>("SubordinateOrganization")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("StaffInforTableModels");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.ViewModel.Tables.SteamInforTableModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CutLowest")
                        .HasColumnType("int");

                    b.Property<int>("CutNow")
                        .HasColumnType("int");

                    b.Property<long>("EntryId")
                        .HasColumnType("bigint");

                    b.Property<string>("EstimationOwners")
                        .HasColumnType("longtext");

                    b.Property<int>("EvaluationCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("LowestTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("OriginalPrice")
                        .HasColumnType("int");

                    b.Property<double>("PlayTime")
                        .HasColumnType("double");

                    b.Property<int>("PriceLowest")
                        .HasColumnType("int");

                    b.Property<int>("PriceNow")
                        .HasColumnType("int");

                    b.Property<int>("RecommendationRate")
                        .HasColumnType("int");

                    b.Property<int>("SteamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SteamId")
                        .IsUnique();

                    b.ToTable("SteamInforTableModels");
                });

            modelBuilder.Entity("EntryPeriphery", b =>
                {
                    b.Property<int>("RelatedEntriesId")
                        .HasColumnType("int");

                    b.Property<long>("RelatedPeripheriesId")
                        .HasColumnType("bigint");

                    b.HasKey("RelatedEntriesId", "RelatedPeripheriesId");

                    b.HasIndex("RelatedPeripheriesId");

                    b.ToTable("EntryPeriphery");
                });

            modelBuilder.Entity("EntryTag", b =>
                {
                    b.Property<int>("EntriesId")
                        .HasColumnType("int");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("EntriesId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("EntryTag");
                });

            modelBuilder.Entity("EntryVideo", b =>
                {
                    b.Property<int>("EntriesId")
                        .HasColumnType("int");

                    b.Property<long>("VideosId")
                        .HasColumnType("bigint");

                    b.HasKey("EntriesId", "VideosId");

                    b.HasIndex("VideosId");

                    b.ToTable("EntryVideo");
                });

            modelBuilder.Entity("EntryVote", b =>
                {
                    b.Property<int>("EntriesId")
                        .HasColumnType("int");

                    b.Property<long>("VotesId")
                        .HasColumnType("bigint");

                    b.HasKey("EntriesId", "VotesId");

                    b.HasIndex("VotesId");

                    b.ToTable("EntryVote");
                });

            modelBuilder.Entity("ExpoGameExpoTag", b =>
                {
                    b.Property<long>("GamesId")
                        .HasColumnType("bigint");

                    b.Property<long>("TagsId")
                        .HasColumnType("bigint");

                    b.HasKey("GamesId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("ExpoGameExpoTag");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "a18be9c0-aa65-4af8-bd17-00bd9344e575",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "a18be9c0-aa65-4af8-bd17-00bd9344e576",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "a18be9c0-aa65-4af8-bd17-00bd9344e577",
                            Name = "SuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = "a18be9c0-aa65-4af8-bd17-00bd9344e578",
                            Name = "Editor",
                            NormalizedName = "EDITOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "a18be9c0-aa65-4af8-bd17-00bd9344e575",
                            RoleId = "a18be9c0-aa65-4af8-bd17-00bd9344e575"
                        },
                        new
                        {
                            UserId = "a18be9c0-aa65-4af8-bd17-00bd9344e575",
                            RoleId = "a18be9c0-aa65-4af8-bd17-00bd9344e576"
                        },
                        new
                        {
                            UserId = "a18be9c0-aa65-4af8-bd17-00bd9344e575",
                            RoleId = "a18be9c0-aa65-4af8-bd17-00bd9344e577"
                        },
                        new
                        {
                            UserId = "a18be9c0-aa65-4af8-bd17-00bd9344e575",
                            RoleId = "a18be9c0-aa65-4af8-bd17-00bd9344e578"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PeripheryVote", b =>
                {
                    b.Property<long>("PeripheriesId")
                        .HasColumnType("bigint");

                    b.Property<long>("VotesId")
                        .HasColumnType("bigint");

                    b.HasKey("PeripheriesId", "VotesId");

                    b.HasIndex("VotesId");

                    b.ToTable("PeripheryVote");
                });

            modelBuilder.Entity("VoteOptionVoteUser", b =>
                {
                    b.Property<long>("SeletedOptionsId")
                        .HasColumnType("bigint");

                    b.Property<long>("VoteUsersId")
                        .HasColumnType("bigint");

                    b.HasKey("SeletedOptionsId", "VoteUsersId");

                    b.HasIndex("VoteUsersId");

                    b.ToTable("VoteOptionVoteUser");
                });

            modelBuilder.Entity("ArticleEntry", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Article", null)
                        .WithMany()
                        .HasForeignKey("ArticlesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", null)
                        .WithMany()
                        .HasForeignKey("EntriesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ArticleVideo", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Article", null)
                        .WithMany()
                        .HasForeignKey("ArticlesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.Video", null)
                        .WithMany()
                        .HasForeignKey("VideosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ArticleVote", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Article", null)
                        .WithMany()
                        .HasForeignKey("ArticlesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.Vote", null)
                        .WithMany()
                        .HasForeignKey("VotesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.AlmanacArticle", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Almanac", "Almanac")
                        .WithMany("Articles")
                        .HasForeignKey("AlmanacId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.Article", "Article")
                        .WithMany("Almanacs")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Almanac");

                    b.Navigation("Article");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.AlmanacEntry", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Almanac", "Almanac")
                        .WithMany("Entries")
                        .HasForeignKey("AlmanacId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithMany("Almanacs")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Almanac");

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ApplicationUserCommodity", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationUserCommodities")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Commodity", "Commodity")
                        .WithMany("ApplicationUserCommodities")
                        .HasForeignKey("CommodityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Commodity");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Article", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "CreateUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Disambig", "Disambig")
                        .WithMany("Articles")
                        .HasForeignKey("DisambigId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreateUser");

                    b.Navigation("Disambig");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ArticleRelation", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Article", "FromArticleNavigation")
                        .WithMany("ArticleRelationFromArticleNavigation")
                        .HasForeignKey("FromArticle")
                        .HasConstraintName("FK_ArticleRelation_Article_From");

                    b.HasOne("CnGalWebSite.DataModel.Model.Article", "ToArticleNavigation")
                        .WithMany("ArticleRelationToArticleNavigation")
                        .HasForeignKey("ToArticle")
                        .HasConstraintName("FK_ArticleRelation_Entry_To");

                    b.Navigation("FromArticleNavigation");

                    b.Navigation("ToArticleNavigation");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ArticleRelevance", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Article", null)
                        .WithMany("Relevances")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.BackUpArchive", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Article", "Article")
                        .WithOne("BackUpArchive")
                        .HasForeignKey("CnGalWebSite.DataModel.Model.BackUpArchive", "ArticleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithOne("BackUpArchive")
                        .HasForeignKey("CnGalWebSite.DataModel.Model.BackUpArchive", "EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Article");

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.BackUpArchiveDetail", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.BackUpArchive", "BackUpArchive")
                        .WithMany("BackUpArchiveDetails")
                        .HasForeignKey("BackUpArchiveId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BackUpArchive");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.BasicEntryInformation", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", null)
                        .WithMany("Information")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.BasicEntryInformationAdditional", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.BasicEntryInformation", null)
                        .WithMany("Additional")
                        .HasForeignKey("BasicEntryInformationId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Booking", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithOne("Booking")
                        .HasForeignKey("CnGalWebSite.DataModel.Model.Booking", "EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.BookingGoal", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Booking", null)
                        .WithMany("Goals")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.BookingUser", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Booking", "Booking")
                        .WithMany("Users")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Comment", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithMany()
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Lottery", "Lottery")
                        .WithMany()
                        .HasForeignKey("LotteryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Comment", "ParentCodeNavigation")
                        .WithMany("InverseParentCodeNavigation")
                        .HasForeignKey("ParentCodeNavigationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Periphery", "Periphery")
                        .WithMany()
                        .HasForeignKey("PeripheryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.UserSpaceCommentManager", "UserSpaceCommentManager")
                        .WithMany("Comments")
                        .HasForeignKey("UserSpaceCommentManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Vote", "Vote")
                        .WithMany()
                        .HasForeignKey("VoteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Article");

                    b.Navigation("Entry");

                    b.Navigation("Lottery");

                    b.Navigation("ParentCodeNavigation");

                    b.Navigation("Periphery");

                    b.Navigation("UserSpaceCommentManager");

                    b.Navigation("Video");

                    b.Navigation("Vote");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.CommodityCode", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("CommodityCodes")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Entry", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Disambig", "Disambig")
                        .WithMany("Entries")
                        .HasForeignKey("DisambigId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Disambig");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryAudio", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", null)
                        .WithMany("Audio")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryPicture", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", null)
                        .WithMany("Pictures")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Periphery", null)
                        .WithMany("Pictures")
                        .HasForeignKey("PeripheryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Video", null)
                        .WithMany("Pictures")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryRelation", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "FromEntryNavigation")
                        .WithMany("EntryRelationFromEntryNavigation")
                        .HasForeignKey("FromEntry")
                        .HasConstraintName("FK_EntryRelation_Entry_From");

                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "ToEntryNavigation")
                        .WithMany("EntryRelationToEntryNavigation")
                        .HasForeignKey("ToEntry")
                        .HasConstraintName("FK_EntryRelation_Entry_To");

                    b.Navigation("FromEntryNavigation");

                    b.Navigation("ToEntryNavigation");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryRelevance", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", null)
                        .WithMany("Relevances")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryStaff", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "FromEntryNavigation")
                        .WithMany("EntryStaffFromEntryNavigation")
                        .HasForeignKey("FromEntry")
                        .HasConstraintName("FK_EntryStaff_Entry_From");

                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "ToEntryNavigation")
                        .WithMany("EntryStaffToEntryNavigation")
                        .HasForeignKey("ToEntry")
                        .HasConstraintName("FK_EntryStaff_Entry_To");

                    b.Navigation("FromEntryNavigation");

                    b.Navigation("ToEntryNavigation");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryWebsite", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithOne("WebsiteAddInfor")
                        .HasForeignKey("CnGalWebSite.DataModel.Model.EntryWebsite", "EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryWebsiteImage", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.EntryWebsite", null)
                        .WithMany("Images")
                        .HasForeignKey("EntryWebsiteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Examine", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("Examines")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Article", "Article")
                        .WithMany("Examines")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Disambig", "Disambig")
                        .WithMany("Examines")
                        .HasForeignKey("DisambigId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithMany("Examines")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.FavoriteFolder", "FavoriteFolder")
                        .WithMany("Examines")
                        .HasForeignKey("FavoriteFolderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Periphery", "Periphery")
                        .WithMany("Examines")
                        .HasForeignKey("PeripheryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.PlayedGame", "PlayedGame")
                        .WithMany()
                        .HasForeignKey("PlayedGameId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Video", "Video")
                        .WithMany("Examines")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Article");

                    b.Navigation("Comment");

                    b.Navigation("Disambig");

                    b.Navigation("Entry");

                    b.Navigation("FavoriteFolder");

                    b.Navigation("Periphery");

                    b.Navigation("PlayedGame");

                    b.Navigation("Tag");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ExpoGame", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Game");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ExpoPrize", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.ExpoAward", "Award")
                        .WithMany("Prizes")
                        .HasForeignKey("AwardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Award");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ExpoTask", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.FavoriteFolder", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("FavoriteFolders")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.FavoriteObject", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithMany()
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.FavoriteFolder", "FavoriteFolder")
                        .WithMany("FavoriteObjects")
                        .HasForeignKey("FavoriteFolderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.Periphery", "Periphery")
                        .WithMany()
                        .HasForeignKey("PeripheryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Article");

                    b.Navigation("Entry");

                    b.Navigation("FavoriteFolder");

                    b.Navigation("Periphery");

                    b.Navigation("Tag");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.GameNews", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.OriginalRSS", "RSS")
                        .WithMany()
                        .HasForeignKey("RSSId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.WeeklyNews", null)
                        .WithMany("News")
                        .HasForeignKey("WeeklyNewsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Article");

                    b.Navigation("RSS");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.GameNewsRelatedEntry", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.GameNews", null)
                        .WithMany("Entries")
                        .HasForeignKey("GameNewsId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.GameRelease", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithMany("Releases")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.LotteryAward", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Lottery", "Lottery")
                        .WithMany("Awards")
                        .HasForeignKey("LotteryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Lottery");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.LotteryPrize", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.LotteryAward", "LotteryAward")
                        .WithMany("Prizes")
                        .HasForeignKey("LotteryAwardId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.LotteryUser", "LotteryUser")
                        .WithOne("LotteryPrize")
                        .HasForeignKey("CnGalWebSite.DataModel.Model.LotteryPrize", "LotteryUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("LotteryAward");

                    b.Navigation("LotteryUser");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.LotteryUser", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("Lotteries")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.LotteryAward", "LotteryAward")
                        .WithMany("WinningUsers")
                        .HasForeignKey("LotteryAwardId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Lottery", "Lottery")
                        .WithMany("Users")
                        .HasForeignKey("LotteryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Lottery");

                    b.Navigation("LotteryAward");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Message", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("Messages")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.OperationRecord", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("OperationRecords")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Outlink", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Article", null)
                        .WithMany("Outlinks")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", null)
                        .WithMany("Outlinks")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Video", null)
                        .WithMany("Outlinks")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Perfection", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithOne("Perfection")
                        .HasForeignKey("CnGalWebSite.DataModel.Model.Perfection", "EntryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.PerfectionCheck", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Perfection", "Perfection")
                        .WithMany("Checks")
                        .HasForeignKey("PerfectionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Perfection");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.PeripheryRelation", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Periphery", "FromPeripheryNavigation")
                        .WithMany("PeripheryRelationFromPeripheryNavigation")
                        .HasForeignKey("FromPeriphery")
                        .HasConstraintName("FK_PeripheryRelation_Periphery_From");

                    b.HasOne("CnGalWebSite.DataModel.Model.Periphery", "ToPeripheryNavigation")
                        .WithMany("PeripheryRelationToPeripheryNavigation")
                        .HasForeignKey("ToPeriphery")
                        .HasConstraintName("FK_PeripheryRelation_Periphery_To");

                    b.Navigation("FromPeripheryNavigation");

                    b.Navigation("ToPeripheryNavigation");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.PeripheryRelevanceEntry", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithMany("Peripheries")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Periphery", "Periphery")
                        .WithMany("Entries")
                        .HasForeignKey("PeripheryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Entry");

                    b.Navigation("Periphery");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.PeripheryRelevanceUser", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("UserOwnedPeripheries")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Periphery", "Periphery")
                        .WithMany("Users")
                        .HasForeignKey("PeripheryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Periphery");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.PlayedGame", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("PlayedGames")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithMany("PlayedGames")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.QuestionDisplayCondition", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.QuestionnaireQuestion", "ControlledQuestion")
                        .WithMany("DisplayConditions")
                        .HasForeignKey("ControlledQuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.QuestionOption", "TriggerOption")
                        .WithMany("TriggeredConditions")
                        .HasForeignKey("TriggerOptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.QuestionnaireQuestion", "TriggerQuestion")
                        .WithMany("TriggeredConditions")
                        .HasForeignKey("TriggerQuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ControlledQuestion");

                    b.Navigation("TriggerOption");

                    b.Navigation("TriggerQuestion");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.QuestionOption", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.QuestionnaireQuestion", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.QuestionResponse", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.QuestionnaireQuestion", "Question")
                        .WithMany("Responses")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.QuestionnaireResponse", "QuestionnaireResponse")
                        .WithMany("QuestionResponses")
                        .HasForeignKey("QuestionnaireResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("QuestionnaireResponse");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.QuestionnaireQuestion", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Questionnaire", "Questionnaire")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Questionnaire");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.QuestionnaireResponse", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CnGalWebSite.DataModel.Model.Questionnaire", "Questionnaire")
                        .WithMany("Responses")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Questionnaire");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.RankUser", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("UserRanks")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Rank", "Rank")
                        .WithMany("RankUsers")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Rank");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Recommend", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithMany()
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.RoleBirthday", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.SignInDay", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("SignInDays")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.SteamInfor", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithMany()
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.StoreInfo", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithMany()
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Tag", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Tag", "ParentCodeNavigation")
                        .WithMany("InverseParentCodeNavigation")
                        .HasForeignKey("ParentCodeNavigationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCodeNavigation");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ThirdPartyLoginInfor", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("ThirdPartyLoginInfors")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ThumbsUp", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Article", "Article")
                        .WithMany("ThumbsUps")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Article");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.UserAddress", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithOne("UserAddress")
                        .HasForeignKey("CnGalWebSite.DataModel.Model.UserAddress", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.UserCertification", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithOne("Certification")
                        .HasForeignKey("CnGalWebSite.DataModel.Model.UserCertification", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithOne("Certification")
                        .HasForeignKey("CnGalWebSite.DataModel.Model.UserCertification", "EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.UserIntegral", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("Integrals")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.UserMonitor", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("Monitors")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithMany("Monitors")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.UserOnlineInfor", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("UserOnlineInfors")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.UserReviewEditRecord", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany("ReviewEntries")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Examine", "Examine")
                        .WithMany("ReviewUsers")
                        .HasForeignKey("ExamineId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Examine");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.UserSpaceCommentManager", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithOne("UserSpaceCommentManager")
                        .HasForeignKey("CnGalWebSite.DataModel.Model.UserSpaceCommentManager", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Video", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "CreateUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreateUser");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.VideoRelation", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Video", "FromVideoNavigation")
                        .WithMany("VideoRelationFromVideoNavigation")
                        .HasForeignKey("FromVideo")
                        .HasConstraintName("FK_VideoRelation_Video_From");

                    b.HasOne("CnGalWebSite.DataModel.Model.Video", "ToVideoNavigation")
                        .WithMany("VideoRelationToVideoNavigation")
                        .HasForeignKey("ToVideo")
                        .HasConstraintName("FK_VideoRelation_Video_To");

                    b.Navigation("FromVideoNavigation");

                    b.Navigation("ToVideoNavigation");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.VoteOption", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithMany()
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Periphery", "Periphery")
                        .WithMany()
                        .HasForeignKey("PeripheryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Vote", null)
                        .WithMany("VoteOptions")
                        .HasForeignKey("VoteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Article");

                    b.Navigation("Entry");

                    b.Navigation("Periphery");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.VoteUser", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CnGalWebSite.DataModel.Model.Vote", "Vote")
                        .WithMany("VoteUsers")
                        .HasForeignKey("VoteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Vote");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.WeeklyNews", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Article");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.WeiboUserInfor", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", "Entry")
                        .WithMany()
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Models.FileManager", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", "ApplicationUser")
                        .WithOne("FileManager")
                        .HasForeignKey("CnGalWebSite.DataModel.Models.FileManager", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Models.UserFile", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Models.FileManager", "FileManager")
                        .WithMany("UserFiles")
                        .HasForeignKey("FileManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FileManager");
                });

            modelBuilder.Entity("EntryPeriphery", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", null)
                        .WithMany()
                        .HasForeignKey("RelatedEntriesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.Periphery", null)
                        .WithMany()
                        .HasForeignKey("RelatedPeripheriesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("EntryTag", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", null)
                        .WithMany()
                        .HasForeignKey("EntriesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("EntryVideo", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", null)
                        .WithMany()
                        .HasForeignKey("EntriesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.Video", null)
                        .WithMany()
                        .HasForeignKey("VideosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("EntryVote", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Entry", null)
                        .WithMany()
                        .HasForeignKey("EntriesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.Vote", null)
                        .WithMany()
                        .HasForeignKey("VotesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpoGameExpoTag", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ExpoGame", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.ExpoTag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeripheryVote", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.Periphery", null)
                        .WithMany()
                        .HasForeignKey("PeripheriesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.Vote", null)
                        .WithMany()
                        .HasForeignKey("VotesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("VoteOptionVoteUser", b =>
                {
                    b.HasOne("CnGalWebSite.DataModel.Model.VoteOption", null)
                        .WithMany()
                        .HasForeignKey("SeletedOptionsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CnGalWebSite.DataModel.Model.VoteUser", null)
                        .WithMany()
                        .HasForeignKey("VoteUsersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Almanac", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Entries");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ApplicationUser", b =>
                {
                    b.Navigation("ApplicationUserCommodities");

                    b.Navigation("Certification");

                    b.Navigation("CommodityCodes");

                    b.Navigation("Examines");

                    b.Navigation("FavoriteFolders");

                    b.Navigation("FileManager");

                    b.Navigation("Integrals");

                    b.Navigation("Lotteries");

                    b.Navigation("Messages");

                    b.Navigation("Monitors");

                    b.Navigation("OperationRecords");

                    b.Navigation("PlayedGames");

                    b.Navigation("ReviewEntries");

                    b.Navigation("SignInDays");

                    b.Navigation("ThirdPartyLoginInfors");

                    b.Navigation("UserAddress");

                    b.Navigation("UserOnlineInfors");

                    b.Navigation("UserOwnedPeripheries");

                    b.Navigation("UserRanks");

                    b.Navigation("UserSpaceCommentManager");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Article", b =>
                {
                    b.Navigation("Almanacs");

                    b.Navigation("ArticleRelationFromArticleNavigation");

                    b.Navigation("ArticleRelationToArticleNavigation");

                    b.Navigation("BackUpArchive");

                    b.Navigation("Examines");

                    b.Navigation("Outlinks");

                    b.Navigation("Relevances");

                    b.Navigation("ThumbsUps");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.BackUpArchive", b =>
                {
                    b.Navigation("BackUpArchiveDetails");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.BasicEntryInformation", b =>
                {
                    b.Navigation("Additional");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Booking", b =>
                {
                    b.Navigation("Goals");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Comment", b =>
                {
                    b.Navigation("InverseParentCodeNavigation");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Commodity", b =>
                {
                    b.Navigation("ApplicationUserCommodities");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Disambig", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Entries");

                    b.Navigation("Examines");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Entry", b =>
                {
                    b.Navigation("Almanacs");

                    b.Navigation("Audio");

                    b.Navigation("BackUpArchive");

                    b.Navigation("Booking");

                    b.Navigation("Certification");

                    b.Navigation("EntryRelationFromEntryNavigation");

                    b.Navigation("EntryRelationToEntryNavigation");

                    b.Navigation("EntryStaffFromEntryNavigation");

                    b.Navigation("EntryStaffToEntryNavigation");

                    b.Navigation("Examines");

                    b.Navigation("Information");

                    b.Navigation("Monitors");

                    b.Navigation("Outlinks");

                    b.Navigation("Perfection");

                    b.Navigation("Peripheries");

                    b.Navigation("Pictures");

                    b.Navigation("PlayedGames");

                    b.Navigation("Releases");

                    b.Navigation("Relevances");

                    b.Navigation("WebsiteAddInfor");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.EntryWebsite", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Examine", b =>
                {
                    b.Navigation("ReviewUsers");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.ExpoAward", b =>
                {
                    b.Navigation("Prizes");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.FavoriteFolder", b =>
                {
                    b.Navigation("Examines");

                    b.Navigation("FavoriteObjects");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.GameNews", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Lottery", b =>
                {
                    b.Navigation("Awards");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.LotteryAward", b =>
                {
                    b.Navigation("Prizes");

                    b.Navigation("WinningUsers");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.LotteryUser", b =>
                {
                    b.Navigation("LotteryPrize");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Perfection", b =>
                {
                    b.Navigation("Checks");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Periphery", b =>
                {
                    b.Navigation("Entries");

                    b.Navigation("Examines");

                    b.Navigation("PeripheryRelationFromPeripheryNavigation");

                    b.Navigation("PeripheryRelationToPeripheryNavigation");

                    b.Navigation("Pictures");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.QuestionOption", b =>
                {
                    b.Navigation("TriggeredConditions");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Questionnaire", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("Responses");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.QuestionnaireQuestion", b =>
                {
                    b.Navigation("DisplayConditions");

                    b.Navigation("Options");

                    b.Navigation("Responses");

                    b.Navigation("TriggeredConditions");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.QuestionnaireResponse", b =>
                {
                    b.Navigation("QuestionResponses");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Rank", b =>
                {
                    b.Navigation("RankUsers");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Tag", b =>
                {
                    b.Navigation("InverseParentCodeNavigation");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.UserSpaceCommentManager", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Video", b =>
                {
                    b.Navigation("Examines");

                    b.Navigation("Outlinks");

                    b.Navigation("Pictures");

                    b.Navigation("VideoRelationFromVideoNavigation");

                    b.Navigation("VideoRelationToVideoNavigation");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.Vote", b =>
                {
                    b.Navigation("VoteOptions");

                    b.Navigation("VoteUsers");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Model.WeeklyNews", b =>
                {
                    b.Navigation("News");
                });

            modelBuilder.Entity("CnGalWebSite.DataModel.Models.FileManager", b =>
                {
                    b.Navigation("UserFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
