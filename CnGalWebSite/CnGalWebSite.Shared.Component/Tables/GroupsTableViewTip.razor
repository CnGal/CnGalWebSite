@inject IHttpService _httpService
@inject IPopupService PopupService
@inject IEventService _eventService

<DataTableCard TModel="GroupInforTableModel" Headers="_headers" ApiUrl="@(_baseUrl)" ShowAddButton="false" Title="@($"{_name}列表")" @ref="dataTableCard">
    <ItemColContent>
        @if (context.Header.Value == "actions")
        {
            <MIcon Color="info"
                   Class="mr-2"
                   OnClick="()=>LookItem(context.Item)">@IconType.Look.ToIconString()</MIcon>
        }
        else
        {
            @context.Value
        }
    </ItemColContent>
</DataTableCard>


@code {
    private bool _editDialog;
    private long _editedItemId;
    private bool _detailDialog;

    private string _baseUrl = "api/tables/ListGroups";
    private string _name = "制作组";

    private List<DataTableHeader<GroupInforTableModel>> _headers = new List<DataTableHeader<GroupInforTableModel>>
    {
        new ()
          {
            Text= "Id",
            Align= DataTableHeaderAlign.Start,
            Value= nameof(GroupInforTableModel.RealId)
          },
          new (){ Text= "名称", Value= nameof(GroupInforTableModel.Name)},
          new (){ Text= "别称", Value= nameof(GroupInforTableModel.AnotherNameGroup)},
          new (){ Text= "QQ群", Value= nameof(GroupInforTableModel.QQgroupGroup)},
          new (){ Text= "B站", Value= nameof(GroupInforTableModel.Bilibili)},
          new (){ Text= "微博", Value= nameof(GroupInforTableModel.MicroBlog)},
          new (){ Text= "操作", Value= "actions",Sortable=false }
    };

    DataTableCard<GroupInforTableModel> dataTableCard;

    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }

    public async Task LookItem(GroupInforTableModel model)
    {
        await _eventService.OpenNewPage("https://www.cngal.org/entries/index/" + model.RealId);
    }
}
