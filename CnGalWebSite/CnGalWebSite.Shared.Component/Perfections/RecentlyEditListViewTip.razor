@inject IHttpService _httpService
@inject ToastService ToastService
@inject IDataCacheService _dataCacheService


<CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>
    <CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer Title="最新编辑" Icon="fa fa-fw fa-pencil" Class="mb-4">
        <ButtonContent>

            <MButton Text Block  OnClick="GetNewRandomList">
                <MIcon Left>mdi-refresh </MIcon>
                刷新
            </MButton>


        </ButtonContent>
        <ChildContent>
            <div class="row h-100 ps-2 pe-2">
                @foreach (var item in Model)
                {
                    <div class="col-12 col-md-6 col-xxl-4">
                        @{
                            string name = item.RelatedName + " 编辑记录";
                            string context = string.IsNullOrWhiteSpace(item.RelatedName) ? ("Id：" + item.RelatedId) : item.RelatedName;
                            string url = "/" + item.Type switch
                            {
                                ExaminedNormalListModelType.Entry => "entries",
                                ExaminedNormalListModelType.Article => "articles",
                                ExaminedNormalListModelType.Tag => "tags",
                                ExaminedNormalListModelType.Disambig => "disambigs",
                                ExaminedNormalListModelType.Periphery => "peripheries",
                                ExaminedNormalListModelType.Video => "videos",
                                _=>""
                            } + "/index/" + item.RelatedId;
                        }

                        <a href="@url" class="a-font-color">
                            <div class=" p-3 ">
                                <CnGalWebSite.Shared.MasaComponent.Shared.Cards.Users.UserRankTextCard UserId="@item.UserId" UserName="@item.UserName" Image="@item.UserImage" Ranks="@item.Ranks" Time="@item.ApplyTime"
                                                     Text="@("对 "+context+" "+item.Operation.GetDisplayName())" ForceBadgeShowText></CnGalWebSite.Shared.MasaComponent.Shared.Cards.Users.UserRankTextCard>
                            </div>
                        </a>

                    </div>
                }
            </div>
        </ChildContent>

    </CnGalWebSite.Shared.MasaComponent.Shared.Components.MasaTitleContainer>

</CnGalWebSite.Shared.MasaComponent.Shared.Components.MiniModeContainer>

@code {
    int ItemNum = 4;

    public List<ExaminedNormalListModel> Model { get; set; } = new List<ExaminedNormalListModel>();

    [Parameter]
    public bool IsTransverse { get; set; }
    [CascadingParameter]
    public ErrorHandler ErrorHandler { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Model = await _httpService.GetAsync<List<ExaminedNormalListModel>>("api/perfections/GetRecentlyEditList");

        }
        catch (Exception ex)
        {
            ErrorHandler.ProcessError(ex, "获取近期编辑列表失败");
        }
    }


    public async Task GetNewRandomList()
    {
        await OnInitializedAsync();
    }



}
